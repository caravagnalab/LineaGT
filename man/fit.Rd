% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fit_model.R
\name{fit}
\alias{fit}
\title{Creates an object of class \code{mvnmm}.}
\usage{
fit(
  cov.df,
  vaf.df = NULL,
  infer_phylogenies = TRUE,
  k_interval = c(10, 30),
  n_runs = 2,
  steps = 500,
  lr = 0.005,
  p = 0.01,
  convergence = TRUE,
  covariance = "diag",
  hyperparameters = list(),
  show_progr = FALSE,
  store_grads = TRUE,
  store_losses = TRUE,
  store_params = FALSE,
  random_state = 25
)
}
\arguments{
\item{cov.df}{Input coverage dataset. It must have at least the columns \code{coverage}, and \code{IS},
and additional columns \code{timepoints} and \code{lineage}, will be added if missing, assuming single
timepoint and lineage.}

\item{vaf.df}{Input VAF dataset. If not \code{NULL}, the mutations clustering will be performed.
It must have at least the columns \code{mutation}, \code{IS}, \code{alt}, \code{dp}, and additional
\code{vaf}, \code{timepoints}, \code{lineage}, \code{IS}, \code{mutation}, with the number of reads for the mutated allele,
overall depth, vaf values, timepoint, lineage, IS and mutation, respectively.}

\item{infer_phylogenies}{A Boolean. If set to \code{TRUE}, the function will also compute and attach to
the returned object the phylogenetic trees for each cluster.}

\item{k_interval}{Interval of K values to test.}

\item{n_runs}{Number of runs to perform for each K.}

\item{steps}{Maximum number of steps for the inference.}

\item{lr}{Learning rate used in the inference.}

\item{p}{Numeric value in \code{[0,1]} used to check the convergence of the parameters. If from one to the next
iterationthe value of the parameters vary less than \code{p}% for \code{n} iterations, the inference stops.}

\item{convergence}{A Boolean. If set to \code{TRUE}, the function will check for early convergence,
otherwise it will perform \code{steps} iterations.}

\item{covariance}{Covariance type for the Multivariate Gaussian.}

\item{show_progr}{A Boolean. If \code{TRUE}, the progression bar will be shown during inference.}

\item{store_grads}{A Booolean. If \code{TRUE}, the gradient norms for the parameters at each
iteration will be stored.}

\item{store_losses}{A Boolean. If \code{TRUE}, the computed losses for the parameters at each
iteration will be stored.}

\item{store_params}{A Boolean. If \code{TRUE}, the estimated parameters at each iteration will be stored.}

\item{random_state}{Value of the seed.}
}
\value{
a \code{mvnmm} object, containing the input dataset, annotated with IS_values, N, K, T
specific of the dataset, the input IS and column names, a list params that will contain the
inferred parameters, the python object
}
\description{
Function to fit the input data.
}
