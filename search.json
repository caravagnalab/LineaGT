[{"path":"caravagnalab.github.io/lineaGT/articles/Get-started.html","id":"installation-of-the-package","dir":"Articles","previous_headings":"","what":"Installation of the package","title":"Get started","text":"can install LineaGT GitHub using devtools. Load package.","code":"devtools::install_github(\"caravagnalab/lineaGT\") library(lineaGT)"},{"path":"caravagnalab.github.io/lineaGT/articles/Get-started.html","id":"python-dependencies-installation","dir":"Articles","previous_headings":"","what":"Python dependencies installation","title":"Get started","text":"package loaded, package automatically check whether: version Anaconda Miniconda available, otherwise Miniconda installation started, conda environment loaded, package check lineagt-env present, otherwise created, use existing conda environment, can loaded loading package, either reticulate function reticulate::use_condaenv() using lineaGT function load_conda_env(): eventually, required Python dependencies installed loaded environment, installed.","code":"reticulate::use_condaenv(\"env-name\", required=TRUE) load_conda_env(envname=\"env-name\")"},{"path":"caravagnalab.github.io/lineaGT/articles/Get-started.html","id":"functions-to-manually-configure-an-environment","dir":"Articles","previous_headings":"","what":"Functions to manually configure an environment","title":"Get started","text":"function ‘pylineaGT’ can also used interactively manually configure existing environment, create one scratch. function first check Anaconda Miniconda installation available, otherwise prompt Miniconda installation. input name environment either name existing environment name environment created. environment loaded created, required Python dependencies installed.","code":"configure_environment(env_name=\"lineaget-env\", use_default=F)"},{"path":"caravagnalab.github.io/lineaGT/articles/Get-started.html","id":"check-the-loaded-python-version-and-environment","dir":"Articles","previous_headings":"","what":"Check the loaded Python version and environment","title":"Get started","text":"package provides also set helper functions check environment loaded. have_loaded_env() check environment already loaded, which_conda_env() check environment loaded. have_python_deps() check Python packages list installed specified environment. load_conda_env() load specified environment.","code":""},{"path":"caravagnalab.github.io/lineaGT/articles/Lineage-inference.html","id":"fitting-the-model","dir":"Articles","previous_headings":"","what":"Fitting the model","title":"Lineage inference","text":"","code":"# x_fit = fit( #   data_filt, #   vaf, #   steps = 500, #   n_runs = 2, #   k_interval = c(10, 12), #   min_frac=0.1 #   )"},{"path":"caravagnalab.github.io/lineaGT/articles/Plotting-functions.html","id":"scatterplot","dir":"Articles","previous_headings":"","what":"Scatterplot","title":"Plotting functions","text":"","code":"# plots = plot_scatter_density(x_fit) # plots$`cov_early.L2:cov_early.L1` # to visualize a single plot"},{"path":"caravagnalab.github.io/lineaGT/articles/Plotting-functions.html","id":"marginal-distributions","dir":"Articles","previous_headings":"","what":"Marginal distributions","title":"Plotting functions","text":"","code":"# plot_marginal(x_fit)"},{"path":"caravagnalab.github.io/lineaGT/articles/Plotting-functions.html","id":"mullerplot","dir":"Articles","previous_headings":"","what":"Mullerplot","title":"Plotting functions","text":"","code":"# plot_mullerplot(x_fit, which=\"frac\", wrap=T) # plot_mullerplot(x_fit, which=\"pop\", wrap=T) # plot_mullerplot(x_fit, which=\"fitness\", wrap=T)"},{"path":"caravagnalab.github.io/lineaGT/articles/Plotting-functions.html","id":"clonal-growth","dir":"Articles","previous_headings":"","what":"Clonal Growth","title":"Plotting functions","text":"","code":"# plot_exp_fit(x_fit) # plot_exp_rate(x_fit)"},{"path":[]},{"path":"caravagnalab.github.io/lineaGT/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Elena Buscaroli. Author, maintainer. Giulio Caravagna. Author.","code":""},{"path":"caravagnalab.github.io/lineaGT/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Buscaroli E, Caravagna G (2022). lineaGT: lineaGT. https://github.com/caravagnalab/lineaGT, https://caravagnalab.github.io/lineaGT/.","code":"@Manual{,   title = {lineaGT: lineaGT},   author = {Elena Buscaroli and Giulio Caravagna},   year = {2022},   note = {https://github.com/caravagnalab/lineaGT, https://caravagnalab.github.io/lineaGT/}, }"},{"path":"caravagnalab.github.io/lineaGT/index.html","id":"lineagt-","dir":"","previous_headings":"","what":"lineaGT","title":"lineaGT","text":"package implements algorithm determine lineage inference gene therapy assays based insertion sites, accounting also somatic mutations accumulation. assays supported lineaGT package ……. R package provides R interface Python algorithms developed pyLineaGT package, uses Pyro probabilistic programming language infer lineage histories.","code":""},{"path":"caravagnalab.github.io/lineaGT/index.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"lineaGT","text":"use lineaGT, please cite: ……","code":""},{"path":[]},{"path":"caravagnalab.github.io/lineaGT/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"lineaGT","text":"can install released version lineaGT GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"caravagnalab/lineaGT\")"},{"path":"caravagnalab.github.io/lineaGT/index.html","id":"copyright-and-contacts","dir":"","previous_headings":"Installation","what":"Copyright and contacts","title":"lineaGT","text":"Elena Buscaroli, Giulio Caravagna. Cancer Data Science (CDS) Laboratory, University Trieste, Italy.","code":""},{"path":"caravagnalab.github.io/lineaGT/reference/configure_environment.html","id":null,"dir":"Reference","previous_headings":"","what":"Configure the reticulate environment — configure_environment","title":"Configure the reticulate environment — configure_environment","text":"Function configure Python dependencies R. Python environment available, function check version conda miniconda, otherwise install miniconda, install Python package pylineaGT.","code":""},{"path":"caravagnalab.github.io/lineaGT/reference/configure_environment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Configure the reticulate environment — configure_environment","text":"","code":"configure_environment(envname = \"lineagt-env\", use_default = F)"},{"path":"caravagnalab.github.io/lineaGT/reference/configure_environment.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Configure the reticulate environment — configure_environment","text":"env_name name conda environment use, available.","code":""},{"path":[]},{"path":"caravagnalab.github.io/lineaGT/reference/filter_dataset.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filters the input dataset. — filter_dataset","text":"","code":"filter_dataset(   cov.df,   min_cov = 5,   min_frac = 0.05,   k_interval = c(10, 20),   metric = \"calinski_harabasz_score\",   seed = 5 )"},{"path":"caravagnalab.github.io/lineaGT/reference/filter_dataset.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filters the input dataset. — filter_dataset","text":"cov.df Input coverage dataset. must least columns coverage, timepoints, lineage, , coverage values, timepoint, lineage , respectively. min_cov add min_frac add k_interval add metric add seed add","code":""},{"path":"caravagnalab.github.io/lineaGT/reference/filter_dataset.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filters the input dataset. — filter_dataset","text":"dataset shape input one, filtered observations.","code":""},{"path":"caravagnalab.github.io/lineaGT/reference/fit.html","id":null,"dir":"Reference","previous_headings":"","what":"Creates an object of class mvnmm. — fit","title":"Creates an object of class mvnmm. — fit","text":"Function fit input data.","code":""},{"path":"caravagnalab.github.io/lineaGT/reference/fit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Creates an object of class mvnmm. — fit","text":"","code":"fit(   cov.df,   vaf.df = NULL,   infer_phylogenies = TRUE,   infer_growth = TRUE,   k_interval = c(10, 30),   n_runs = 1,   steps = 500,   lr = 0.005,   p = 1,   min_frac = 0,   max_IS = NULL,   convergence = TRUE,   covariance = \"full\",   hyperparameters = list(),   default_constr = TRUE,   sigma_constr_pars = list(slope = 0.09804862, intercept = 22.09327233),   timepoints_to_int = list(),   show_progr = FALSE,   store_grads = TRUE,   store_losses = TRUE,   store_params = FALSE,   initializ = TRUE,   seed = 25,   sample_id = \"\" )"},{"path":"caravagnalab.github.io/lineaGT/reference/fit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Creates an object of class mvnmm. — fit","text":"cov.df Input coverage dataset. must least columns coverage, , additional columns timepoints lineage, added missing, assuming single timepoint lineage. vaf.df Input VAF dataset. NULL, mutations clustering performed. must least columns mutation, , alt, dp, additional vaf, timepoints, lineage, , mutation, number reads mutated allele, overall depth, vaf values, timepoint, lineage, mutation, respectively. infer_phylogenies Boolean. set TRUE, function also compute attach returned object phylogenetic trees cluster. k_interval Interval K values test. n_runs Number runs perform K. steps Maximum number steps inference. lr Learning rate used inference. p Numeric value used check convergence parameters. min_frac add max_IS add convergence Boolean. set TRUE, function check early convergence, otherwise perform steps iterations. covariance Covariance type Multivariate Gaussian. hyperparameters add default_constr add sigma_constr_pars add timepoints_to_int add show_progr Boolean. TRUE, progression bar shown inference. store_grads Booolean. TRUE, gradient norms parameters iteration stored. store_losses Boolean. TRUE, computed losses parameters iteration stored. store_params Boolean. TRUE, estimated parameters iteration stored. initializ add seed Value seed. sample_id add","code":""},{"path":"caravagnalab.github.io/lineaGT/reference/fit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Creates an object of class mvnmm. — fit","text":"mvnmm object, containing input dataset, annotated IS_values, N, K, T specific dataset, input column names, list params contain inferred parameters, python object","code":""},{"path":"caravagnalab.github.io/lineaGT/reference/fit_growth_rates.html","id":null,"dir":"Reference","previous_headings":"","what":"Infer growth rates for each clone and subclone. — fit_growth_rates","title":"Infer growth rates for each clone and subclone. — fit_growth_rates","text":"Infer growth rates clone subclone.","code":""},{"path":"caravagnalab.github.io/lineaGT/reference/fit_growth_rates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Infer growth rates for each clone and subclone. — fit_growth_rates","text":"","code":"fit_growth_rates(   x,   steps = 500,   highlight = c(),   timepoints_to_int = c(),   growth_model = \"\",   force = T,   tree_score = 1,   py_pkg = NULL )"},{"path":"caravagnalab.github.io/lineaGT/reference/fit_growth_rates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Infer growth rates for each clone and subclone. — fit_growth_rates","text":"x mvnmm object. steps maximum number steps inference. highlight set clusters run inference . specified, run clusters. timepoints_to_int provided timepoints integers timepoints--int list stored x, list mapping values integers required. growth_model string specifying type growth model use, exp log corresponding exponential logistic models, respectively. force model already fitted, setting force FALSE keep computed rates. Setting force TRUE fit model specified clusters.","code":""},{"path":[]},{"path":"caravagnalab.github.io/lineaGT/reference/fit_mutations.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit the mutations clustering — fit_mutations","title":"Fit the mutations clustering — fit_mutations","text":"Fit mutations clustering","code":""},{"path":"caravagnalab.github.io/lineaGT/reference/fit_mutations.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit the mutations clustering — fit_mutations","text":"","code":"fit_mutations(   x,   vaf.df = NULL,   infer_phylo = TRUE,   min_frac = 0,   max_IS = NULL,   highlight = list() )"},{"path":"caravagnalab.github.io/lineaGT/reference/fit_mutations.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit the mutations clustering — fit_mutations","text":"x mvnmm object. vaf.df dataframe mutations data. infer_phylo Boolean indicating whether infer also phylogenetic evolution per cluster ISs. min_frac add max_IS add highlight add","code":""},{"path":[]},{"path":"caravagnalab.github.io/lineaGT/reference/fit_phylogenies.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit the phylogenetic trees — fit_phylogenies","title":"Fit the phylogenetic trees — fit_phylogenies","text":"Fit phylogenetic trees","code":""},{"path":"caravagnalab.github.io/lineaGT/reference/fit_phylogenies.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit the phylogenetic trees — fit_phylogenies","text":"","code":"fit_phylogenies(   x,   vaf.df = NULL,   min_frac = 0,   highlight = list(),   fit_muts = FALSE )"},{"path":"caravagnalab.github.io/lineaGT/reference/fit_phylogenies.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit the phylogenetic trees — fit_phylogenies","text":"x add vaf.df add min_frac add highlight add do_filter add label add fit_viber add lineages add","code":""},{"path":[]},{"path":"caravagnalab.github.io/lineaGT/reference/get_ISs.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the number of ISs per cluster. — get_ISs","title":"Get the number of ISs per cluster. — get_ISs","text":"Get number ISs per cluster.","code":""},{"path":"caravagnalab.github.io/lineaGT/reference/get_ISs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the number of ISs per cluster. — get_ISs","text":"","code":"get_ISs(x, highlight = c())"},{"path":"caravagnalab.github.io/lineaGT/reference/get_ISs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the number of ISs per cluster. — get_ISs","text":"x fitted object highlight clusters retrieve","code":""},{"path":"caravagnalab.github.io/lineaGT/reference/get_ISs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the number of ISs per cluster. — get_ISs","text":"array names clusters highlight values number ISs assigned cluster","code":""},{"path":"caravagnalab.github.io/lineaGT/reference/get_cov_dataframe.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve the coverage dataframe. — get_cov_dataframe","title":"Retrieve the coverage dataframe. — get_cov_dataframe","text":"Function retrieve coverage dataframe used initialize object.","code":""},{"path":"caravagnalab.github.io/lineaGT/reference/get_cov_dataframe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve the coverage dataframe. — get_cov_dataframe","text":"","code":"get_cov_dataframe(x)"},{"path":"caravagnalab.github.io/lineaGT/reference/get_cov_dataframe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve the coverage dataframe. — get_cov_dataframe","text":"x mvnmm object.","code":""},{"path":"caravagnalab.github.io/lineaGT/reference/get_cov_dataframe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve the coverage dataframe. — get_cov_dataframe","text":"coverage dataset used fit model.","code":""},{"path":"caravagnalab.github.io/lineaGT/reference/get_cov_dataframe.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve the coverage dataframe. — get_cov_dataframe","text":"","code":"if (FALSE) get_cov_dataframe(x)"},{"path":"caravagnalab.github.io/lineaGT/reference/get_covariance_Cholesky.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract the estimated Cholesky matrices, used to factorise the covariance matrix. — get_covariance_Cholesky","title":"Extract the estimated Cholesky matrices, used to factorise the covariance matrix. — get_covariance_Cholesky","text":"Returns list K dataframes, dimension TxT, corresponding covariance matrices estimated clone k","code":""},{"path":"caravagnalab.github.io/lineaGT/reference/get_covariance_Cholesky.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract the estimated Cholesky matrices, used to factorise the covariance matrix. — get_covariance_Cholesky","text":"","code":"get_covariance_Cholesky(x)"},{"path":"caravagnalab.github.io/lineaGT/reference/get_covariance_Cholesky.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract the estimated Cholesky matrices, used to factorise the covariance matrix. — get_covariance_Cholesky","text":"x mvnmm object.","code":""},{"path":"caravagnalab.github.io/lineaGT/reference/get_covariance_Cholesky.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract the estimated Cholesky matrices, used to factorise the covariance matrix. — get_covariance_Cholesky","text":"list estimated covariance matrices.","code":""},{"path":"caravagnalab.github.io/lineaGT/reference/get_covariance_Cholesky.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract the estimated Cholesky matrices, used to factorise the covariance matrix. — get_covariance_Cholesky","text":"","code":"if (FALSE) get_covariance_Cholesky(x)"},{"path":"caravagnalab.github.io/lineaGT/reference/get_covariance_Sigma.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract the estimated covariance matrices. — get_covariance_Sigma","title":"Extract the estimated covariance matrices. — get_covariance_Sigma","text":"Returns list K dataframes, dimension TxT, corresponding covariance matrices estimated clone k","code":""},{"path":"caravagnalab.github.io/lineaGT/reference/get_covariance_Sigma.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract the estimated covariance matrices. — get_covariance_Sigma","text":"","code":"get_covariance_Sigma(x)"},{"path":"caravagnalab.github.io/lineaGT/reference/get_covariance_Sigma.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract the estimated covariance matrices. — get_covariance_Sigma","text":"x mvnmm object.","code":""},{"path":"caravagnalab.github.io/lineaGT/reference/get_covariance_Sigma.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract the estimated covariance matrices. — get_covariance_Sigma","text":"list estimated covariance matrices.","code":""},{"path":"caravagnalab.github.io/lineaGT/reference/get_covariance_Sigma.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract the estimated covariance matrices. — get_covariance_Sigma","text":"","code":"if (FALSE) get_covariance_Sigma(x)"},{"path":"caravagnalab.github.io/lineaGT/reference/get_dimensions.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract the model dimensions. — get_dimensions","title":"Extract the model dimensions. — get_dimensions","text":"Returns vector dimensions model.","code":""},{"path":"caravagnalab.github.io/lineaGT/reference/get_dimensions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract the model dimensions. — get_dimensions","text":"","code":"get_dimensions(x)"},{"path":"caravagnalab.github.io/lineaGT/reference/get_dimensions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract the model dimensions. — get_dimensions","text":"x mvnmm object.","code":""},{"path":"caravagnalab.github.io/lineaGT/reference/get_dimensions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract the model dimensions. — get_dimensions","text":"vector model dimensions.","code":""},{"path":"caravagnalab.github.io/lineaGT/reference/get_dimensions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract the model dimensions. — get_dimensions","text":"","code":"if (FALSE) get_dimensions(x)"},{"path":"caravagnalab.github.io/lineaGT/reference/get_labels.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract the observations labels. — get_labels","title":"Extract the observations labels. — get_labels","text":"Returns list N elements, corresponding labels observation.","code":""},{"path":"caravagnalab.github.io/lineaGT/reference/get_labels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract the observations labels. — get_labels","text":"","code":"get_labels(x)"},{"path":"caravagnalab.github.io/lineaGT/reference/get_labels.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract the observations labels. — get_labels","text":"x mvnmm object.","code":""},{"path":"caravagnalab.github.io/lineaGT/reference/get_labels.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract the observations labels. — get_labels","text":"list observations labels.","code":""},{"path":"caravagnalab.github.io/lineaGT/reference/get_labels.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract the observations labels. — get_labels","text":"","code":"if (FALSE) get_labels(x)"},{"path":"caravagnalab.github.io/lineaGT/reference/get_lineages.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract the data lineages. — get_lineages","title":"Extract the data lineages. — get_lineages","text":"Returns vector lineages input data.","code":""},{"path":"caravagnalab.github.io/lineaGT/reference/get_lineages.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract the data lineages. — get_lineages","text":"","code":"get_lineages(x)"},{"path":"caravagnalab.github.io/lineaGT/reference/get_lineages.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract the data lineages. — get_lineages","text":"x mvnmm object.","code":""},{"path":"caravagnalab.github.io/lineaGT/reference/get_lineages.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract the data lineages. — get_lineages","text":"vector data lineages.","code":""},{"path":"caravagnalab.github.io/lineaGT/reference/get_lineages.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract the data lineages. — get_lineages","text":"","code":"if (FALSE) get_lineages(x)"},{"path":"caravagnalab.github.io/lineaGT/reference/get_mean.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract the estimated mean parameters. — get_mean","title":"Extract the estimated mean parameters. — get_mean","text":"Returns dataframe KxT estimated mean paramaters mu_kt per clone k dimension t.","code":""},{"path":"caravagnalab.github.io/lineaGT/reference/get_mean.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract the estimated mean parameters. — get_mean","text":"","code":"get_mean(x)"},{"path":"caravagnalab.github.io/lineaGT/reference/get_mean.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract the estimated mean parameters. — get_mean","text":"x mvnmm object.","code":""},{"path":"caravagnalab.github.io/lineaGT/reference/get_mean.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract the estimated mean parameters. — get_mean","text":"dataframe mean parameters.","code":""},{"path":"caravagnalab.github.io/lineaGT/reference/get_mean.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract the estimated mean parameters. — get_mean","text":"","code":"if (FALSE) get_mean(x)"},{"path":"caravagnalab.github.io/lineaGT/reference/get_sigma.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract the estimated variance parameters. — get_sigma","title":"Extract the estimated variance parameters. — get_sigma","text":"Returns dataframe KxT estimated variance paramaters sigma_kt per clone k dimension t.","code":""},{"path":"caravagnalab.github.io/lineaGT/reference/get_sigma.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract the estimated variance parameters. — get_sigma","text":"","code":"get_sigma(x)"},{"path":"caravagnalab.github.io/lineaGT/reference/get_sigma.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract the estimated variance parameters. — get_sigma","text":"x mvnmm object.","code":""},{"path":"caravagnalab.github.io/lineaGT/reference/get_sigma.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract the estimated variance parameters. — get_sigma","text":"dataframe variance parameters.","code":""},{"path":"caravagnalab.github.io/lineaGT/reference/get_sigma.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract the estimated variance parameters. — get_sigma","text":"","code":"if (FALSE) get_sigma(x)"},{"path":"caravagnalab.github.io/lineaGT/reference/get_timepoints.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract the data timepoints. — get_timepoints","title":"Extract the data timepoints. — get_timepoints","text":"Returns vector timepoints input data.","code":""},{"path":"caravagnalab.github.io/lineaGT/reference/get_timepoints.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract the data timepoints. — get_timepoints","text":"","code":"get_timepoints(x)"},{"path":"caravagnalab.github.io/lineaGT/reference/get_timepoints.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract the data timepoints. — get_timepoints","text":"x mvnmm object.","code":""},{"path":"caravagnalab.github.io/lineaGT/reference/get_timepoints.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract the data timepoints. — get_timepoints","text":"vector data timepoints.","code":""},{"path":"caravagnalab.github.io/lineaGT/reference/get_timepoints.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract the data timepoints. — get_timepoints","text":"","code":"if (FALSE) get_timepoints(x)"},{"path":"caravagnalab.github.io/lineaGT/reference/get_unique_labels.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract the list of unique observations labels. — get_unique_labels","title":"Extract the list of unique observations labels. — get_unique_labels","text":"Returns list K elements, corresponding unique labels.","code":""},{"path":"caravagnalab.github.io/lineaGT/reference/get_unique_labels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract the list of unique observations labels. — get_unique_labels","text":"","code":"get_unique_labels(x)"},{"path":"caravagnalab.github.io/lineaGT/reference/get_unique_labels.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract the list of unique observations labels. — get_unique_labels","text":"x mvnmm object.","code":""},{"path":"caravagnalab.github.io/lineaGT/reference/get_unique_labels.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract the list of unique observations labels. — get_unique_labels","text":"list unique labels.","code":""},{"path":"caravagnalab.github.io/lineaGT/reference/get_unique_labels.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract the list of unique observations labels. — get_unique_labels","text":"","code":"if (FALSE) get_unique_labels(x)"},{"path":"caravagnalab.github.io/lineaGT/reference/get_unique_muts_labels.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve the list of unique labels of mutation clusters. — get_unique_muts_labels","title":"Retrieve the list of unique labels of mutation clusters. — get_unique_muts_labels","text":"Function retrieve list unique labels mutations clusters, form C_c1.Cm1, c1 clone identifier m1 subclone identifier.","code":""},{"path":"caravagnalab.github.io/lineaGT/reference/get_unique_muts_labels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve the list of unique labels of mutation clusters. — get_unique_muts_labels","text":"","code":"get_unique_muts_labels(x, clusters = c())"},{"path":"caravagnalab.github.io/lineaGT/reference/get_unique_muts_labels.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve the list of unique labels of mutation clusters. — get_unique_muts_labels","text":"x mvnmm object. clusters vector-like variable, identifiers clones want retrieve subclone labels . empty, labels returned.","code":""},{"path":"caravagnalab.github.io/lineaGT/reference/get_unique_muts_labels.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve the list of unique labels of mutation clusters. — get_unique_muts_labels","text":"vector mutations labels.","code":""},{"path":"caravagnalab.github.io/lineaGT/reference/get_unique_muts_labels.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve the list of unique labels of mutation clusters. — get_unique_muts_labels","text":"","code":"if(FALSE) get_unique_muts_labels(x, c(\"C_0\"))"},{"path":"caravagnalab.github.io/lineaGT/reference/get_vaf_dataframe.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve the mutations dataframe. — get_vaf_dataframe","title":"Retrieve the mutations dataframe. — get_vaf_dataframe","text":"Function retrieve mutations dataframe used initialize object.","code":""},{"path":"caravagnalab.github.io/lineaGT/reference/get_vaf_dataframe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve the mutations dataframe. — get_vaf_dataframe","text":"","code":"get_vaf_dataframe(x)"},{"path":"caravagnalab.github.io/lineaGT/reference/get_vaf_dataframe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve the mutations dataframe. — get_vaf_dataframe","text":"x mvnmm object.","code":""},{"path":"caravagnalab.github.io/lineaGT/reference/get_vaf_dataframe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve the mutations dataframe. — get_vaf_dataframe","text":"mutations dataset.","code":""},{"path":"caravagnalab.github.io/lineaGT/reference/get_vaf_dataframe.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve the mutations dataframe. — get_vaf_dataframe","text":"","code":"if (FALSE) get_vaf_dataframe(x)"},{"path":"caravagnalab.github.io/lineaGT/reference/get_weights.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract the estimated mixing proportions. — get_weights","title":"Extract the estimated mixing proportions. — get_weights","text":"Returns list dimension K estimated mixing proportions.","code":""},{"path":"caravagnalab.github.io/lineaGT/reference/get_weights.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract the estimated mixing proportions. — get_weights","text":"","code":"get_weights(x)"},{"path":"caravagnalab.github.io/lineaGT/reference/get_weights.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract the estimated mixing proportions. — get_weights","text":"x mvnmm object.","code":""},{"path":"caravagnalab.github.io/lineaGT/reference/get_weights.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract the estimated mixing proportions. — get_weights","text":"list estimated mixing proportions.","code":""},{"path":"caravagnalab.github.io/lineaGT/reference/get_weights.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract the estimated mixing proportions. — get_weights","text":"","code":"if (FALSE) get_weights(x)"},{"path":"caravagnalab.github.io/lineaGT/reference/get_z_probs.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract the estimated posterior probabilities. — get_z_probs","title":"Extract the estimated posterior probabilities. — get_z_probs","text":"Returns dataframe shape NxK posterior distribution p(k|n) observation n belong cluster k.","code":""},{"path":"caravagnalab.github.io/lineaGT/reference/get_z_probs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract the estimated posterior probabilities. — get_z_probs","text":"","code":"get_z_probs(x)"},{"path":"caravagnalab.github.io/lineaGT/reference/get_z_probs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract the estimated posterior probabilities. — get_z_probs","text":"x mvnmm object.","code":""},{"path":"caravagnalab.github.io/lineaGT/reference/get_z_probs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract the estimated posterior probabilities. — get_z_probs","text":"dataframe posterior distributions.","code":""},{"path":"caravagnalab.github.io/lineaGT/reference/get_z_probs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract the estimated posterior probabilities. — get_z_probs","text":"","code":"if (FALSE) get_z_probs(x)"},{"path":"caravagnalab.github.io/lineaGT/reference/have_loaded_env.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if there is a loaded conda environment. — have_loaded_env","title":"Check if there is a loaded conda environment. — have_loaded_env","text":"Function check conda environment already loaded.","code":""},{"path":"caravagnalab.github.io/lineaGT/reference/have_loaded_env.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if there is a loaded conda environment. — have_loaded_env","text":"","code":"have_loaded_env()"},{"path":"caravagnalab.github.io/lineaGT/reference/have_loaded_env.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if there is a loaded conda environment. — have_loaded_env","text":"Boolean, TRUE environment loaded, FALSE otherwise.","code":""},{"path":"caravagnalab.github.io/lineaGT/reference/have_python_deps.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if Python packages are installed in the environment. — have_python_deps","title":"Check if Python packages are installed in the environment. — have_python_deps","text":"Function check one Python packages present conda environment.","code":""},{"path":"caravagnalab.github.io/lineaGT/reference/have_python_deps.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if Python packages are installed in the environment. — have_python_deps","text":"","code":"have_python_deps(envname = \"\", py_pkgs = c(\"pylineagt\"))"},{"path":"caravagnalab.github.io/lineaGT/reference/have_python_deps.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if Python packages are installed in the environment. — have_python_deps","text":"envname name environment check. empty, function check currently loaded environment. py_pkgs list vector Python packages.","code":""},{"path":"caravagnalab.github.io/lineaGT/reference/have_python_deps.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if Python packages are installed in the environment. — have_python_deps","text":"list Boolean. input package, TRUE package installed, FALSE otherwise.","code":""},{"path":"caravagnalab.github.io/lineaGT/reference/load_conda_env.html","id":null,"dir":"Reference","previous_headings":"","what":"Load the input conda environment. — load_conda_env","title":"Load the input conda environment. — load_conda_env","text":"Function load input conda environment. function raise error Python version already attached reticulate package. case, necessary restart R session load desired environment **** calling lineaGT function interfacing Python - filter_dataset() fit().","code":""},{"path":"caravagnalab.github.io/lineaGT/reference/load_conda_env.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load the input conda environment. — load_conda_env","text":"","code":"load_conda_env(envname = \"lineagt-env\")"},{"path":"caravagnalab.github.io/lineaGT/reference/plot.mvnmm.html","id":null,"dir":"Reference","previous_headings":"","what":"Mullerplot — plot.mvnmm","title":"Mullerplot — plot.mvnmm","text":"Mullerplot showing longitudinal clonal evolution per lineage.","code":""},{"path":"caravagnalab.github.io/lineaGT/reference/plot.mvnmm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Mullerplot — plot.mvnmm","text":"","code":"# S3 method for mvnmm plot(x, ...)"},{"path":"caravagnalab.github.io/lineaGT/reference/plot.mvnmm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Mullerplot — plot.mvnmm","text":"x object class mvnmm ... Default extra paramaters","code":""},{"path":[]},{"path":"caravagnalab.github.io/lineaGT/reference/plot_IC.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to plot the Information Criteria computed during model selection. — plot_IC","title":"Function to plot the Information Criteria computed during model selection. — plot_IC","text":"Function plot Information Criteria computed model selection.","code":""},{"path":"caravagnalab.github.io/lineaGT/reference/plot_IC.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to plot the Information Criteria computed during model selection. — plot_IC","text":"","code":"plot_IC(x)"},{"path":"caravagnalab.github.io/lineaGT/reference/plot_IC.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to plot the Information Criteria computed during model selection. — plot_IC","text":"x mvnmm object.","code":""},{"path":"caravagnalab.github.io/lineaGT/reference/plot_differentiation_tree.html","id":null,"dir":"Reference","previous_headings":"","what":"Visualize the number of subclones on the differentiatio tree — plot_differentiation_tree","title":"Visualize the number of subclones on the differentiatio tree — plot_differentiation_tree","text":"Visualize number subclones differentiatio tree","code":""},{"path":"caravagnalab.github.io/lineaGT/reference/plot_differentiation_tree.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Visualize the number of subclones on the differentiatio tree — plot_differentiation_tree","text":"","code":"plot_differentiation_tree(   x,   edges = differentiation_tree(),   highlight = c(),   single_tree = F,   wrap = T,   timepoints = c() )"},{"path":"caravagnalab.github.io/lineaGT/reference/plot_differentiation_tree.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Visualize the number of subclones on the differentiatio tree — plot_differentiation_tree","text":"x add edges add highlight add single_tree add wrap add","code":""},{"path":[]},{"path":"caravagnalab.github.io/lineaGT/reference/plot_gradient_norms.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to plot the gradients norms. — plot_gradient_norms","title":"Function to plot the gradients norms. — plot_gradient_norms","text":"gradient norms parameters per iteration, computed input K used model selection.","code":""},{"path":"caravagnalab.github.io/lineaGT/reference/plot_gradient_norms.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to plot the gradients norms. — plot_gradient_norms","text":"","code":"plot_gradient_norms(x)"},{"path":"caravagnalab.github.io/lineaGT/reference/plot_gradient_norms.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to plot the gradients norms. — plot_gradient_norms","text":"x mvnmm object.","code":""},{"path":"caravagnalab.github.io/lineaGT/reference/plot_growth_rates.html","id":null,"dir":"Reference","previous_headings":"","what":"Visualize the infered growth rates. — plot_growth_rates","title":"Visualize the infered growth rates. — plot_growth_rates","text":"Function visualize growth coefficients clone lineage.","code":""},{"path":"caravagnalab.github.io/lineaGT/reference/plot_growth_rates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Visualize the infered growth rates. — plot_growth_rates","text":"","code":"plot_growth_rates(   x,   highlight = c(),   min_frac = 0,   mutations = F,   timepoints_to_int = list(),   fit = F )"},{"path":"caravagnalab.github.io/lineaGT/reference/plot_growth_rates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Visualize the infered growth rates. — plot_growth_rates","text":"x mvnmm object. highlight vector clusters IDs highlight plot. min_frac min_frac numeric value [0,1] representing minimum abundance highlight clone. mutations Boolean. set TRUE, growth visualize cluster mutations. timepoints_to_int list map timepoint value integer. fit add","code":""},{"path":"caravagnalab.github.io/lineaGT/reference/plot_growth_rates.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Visualize the infered growth rates. — plot_growth_rates","text":"","code":"if (FALSE) plot_growth_rates(x)"},{"path":"caravagnalab.github.io/lineaGT/reference/plot_growth_regression.html","id":null,"dir":"Reference","previous_headings":"","what":"Visualize the regression given the infered growth rates. — plot_growth_regression","title":"Visualize the regression given the infered growth rates. — plot_growth_regression","text":"Function visualize growht clone lineage.","code":""},{"path":"caravagnalab.github.io/lineaGT/reference/plot_growth_regression.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Visualize the regression given the infered growth rates. — plot_growth_regression","text":"","code":"plot_growth_regression(   x,   highlight = c(),   min_frac = 0,   mutations = F,   timepoints_to_int = list(),   fit = F )"},{"path":"caravagnalab.github.io/lineaGT/reference/plot_growth_regression.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Visualize the regression given the infered growth rates. — plot_growth_regression","text":"x mvnmm object. highlight vector clusters IDs highlight plot. min_frac min_frac numeric value [0,1] representing minimum abundance highlight clone. mutations Boolean. set TRUE, growth visualize cluster mutations. timepoints_to_int list map timepoint value integer. fit add","code":""},{"path":"caravagnalab.github.io/lineaGT/reference/plot_growth_regression.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Visualize the regression given the infered growth rates. — plot_growth_regression","text":"","code":"if (FALSE) plot_exp_fit(x)"},{"path":"caravagnalab.github.io/lineaGT/reference/plot_losses.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to plot the training losses. — plot_losses","title":"Function to plot the training losses. — plot_losses","text":"Function plot training losses.","code":""},{"path":"caravagnalab.github.io/lineaGT/reference/plot_losses.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to plot the training losses. — plot_losses","text":"","code":"plot_losses(x, train = FALSE)"},{"path":"caravagnalab.github.io/lineaGT/reference/plot_losses.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to plot the training losses. — plot_losses","text":"x mvnmm object. train Boolean. set TRUE, losses computed model selection visualized.","code":""},{"path":"caravagnalab.github.io/lineaGT/reference/plot_marginal.html","id":null,"dir":"Reference","previous_headings":"","what":"Histogram of the marginal distribution of each dimension — plot_marginal","title":"Histogram of the marginal distribution of each dimension — plot_marginal","text":"Function plot marginal distribution coverage, timepoint, colored cluster.","code":""},{"path":"caravagnalab.github.io/lineaGT/reference/plot_marginal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Histogram of the marginal distribution of each dimension — plot_marginal","text":"","code":"plot_marginal(   x,   min_frac = 0,   highlight = c(),   binwidth = 10,   show_dens = T,   timepoints_to_int = list() )"},{"path":"caravagnalab.github.io/lineaGT/reference/plot_marginal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Histogram of the marginal distribution of each dimension — plot_marginal","text":"x mvnmm object. highlight vector clusters IDs highlight plot. binwidth numeric value representing histogram binwidth.","code":""},{"path":"caravagnalab.github.io/lineaGT/reference/plot_marginal.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Histogram of the marginal distribution of each dimension — plot_marginal","text":"","code":"if (FALSE) plot_marginal(x)"},{"path":"caravagnalab.github.io/lineaGT/reference/plot_mullerplot.html","id":null,"dir":"Reference","previous_headings":"","what":"Muller plot — plot_mullerplot","title":"Muller plot — plot_mullerplot","text":"Function visualize mullerplot fitted object.","code":""},{"path":"caravagnalab.github.io/lineaGT/reference/plot_mullerplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Muller plot — plot_mullerplot","text":"","code":"plot_mullerplot(   x,   which = \"frac\",   highlight = c(),   min_frac = 0,   timepoints_to_int = c(),   mutations = F,   single_clone = T,   tree_score = 1,   legend.pos = \"right\",   wrap = T )"},{"path":"caravagnalab.github.io/lineaGT/reference/plot_mullerplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Muller plot — plot_mullerplot","text":"x mvnmm object. string among \"frac\",\"pop\",\"fitness\" determining whether plot coverage normalized [0,1], absolute clone abundance, clone colored growth rate, computed assuming exponential growth. highlight vector clusters IDs highlight plot. min_frac min_frac numeric value [0,1] representing minimum abundance highlight clone. timepoints_to_int list map timepoint value integer. mutations Boolean. set TRUE, also clusters mutations visualized. single_clone Boolean. mutations single_clone set TRUE, clones reported highlight respective subclones visualised. tree_score add legend.pos add wrap Boolean. set TRUE, single plot mullerplots lineage returned.","code":""},{"path":"caravagnalab.github.io/lineaGT/reference/plot_mullerplot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Muller plot — plot_mullerplot","text":"","code":"if (FALSE) plot_mullerplot(x, wrap=T)"},{"path":"caravagnalab.github.io/lineaGT/reference/plot_phylogeny.html","id":null,"dir":"Reference","previous_headings":"","what":"Clonal evolution trees — plot_phylogeny","title":"Clonal evolution trees — plot_phylogeny","text":"Clonal evolution trees","code":""},{"path":"caravagnalab.github.io/lineaGT/reference/plot_phylogeny.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clonal evolution trees — plot_phylogeny","text":"","code":"plot_phylogeny(x, show_best = 1, min_frac = 0, highlight = c())"},{"path":"caravagnalab.github.io/lineaGT/reference/plot_phylogeny.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Clonal evolution trees — plot_phylogeny","text":"x mvnmm object. show_best number trees visualize based computed score. min_frac value [0,1] representing minimum abundance show clusters. highlight list labels ID show.","code":""},{"path":[]},{"path":"caravagnalab.github.io/lineaGT/reference/plot_scatter_density.html","id":null,"dir":"Reference","previous_headings":"","what":"2D scatterplot and density — plot_scatter_density","title":"2D scatterplot and density — plot_scatter_density","text":"Function plot scatterplots coverage, one timepoint , together Gaussian density.","code":""},{"path":"caravagnalab.github.io/lineaGT/reference/plot_scatter_density.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"2D scatterplot and density — plot_scatter_density","text":"","code":"plot_scatter_density(x, plot_density = T, highlight = c(), min_frac = 0)"},{"path":"caravagnalab.github.io/lineaGT/reference/plot_scatter_density.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"2D scatterplot and density — plot_scatter_density","text":"x mvnmm object. plot_density Boolean. set FALSE, Gaussian density displayed. highlight vector clusters IDs highlight plot. facet Boolean. set TRUE, plot faceted labels.","code":""},{"path":"caravagnalab.github.io/lineaGT/reference/plot_scatter_density.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"2D scatterplot and density — plot_scatter_density","text":"list plots, one timepoints combination.","code":""},{"path":"caravagnalab.github.io/lineaGT/reference/plot_scatter_density.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"2D scatterplot and density — plot_scatter_density","text":"","code":"if (FALSE) plots = plot_scatter_density(x)"},{"path":"caravagnalab.github.io/lineaGT/reference/plot_vaf.html","id":null,"dir":"Reference","previous_headings":"","what":"VAF 2D scatterplot — plot_vaf","title":"VAF 2D scatterplot — plot_vaf","text":"Function plot VAFs mutations one timepoint ","code":""},{"path":"caravagnalab.github.io/lineaGT/reference/plot_vaf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"VAF 2D scatterplot — plot_vaf","text":"","code":"plot_vaf(x, min_frac = 0, highlight = c(), wrap = T)"},{"path":"caravagnalab.github.io/lineaGT/reference/plot_vaf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"VAF 2D scatterplot — plot_vaf","text":"x mvnmm object. min_frac value [0,1] representing minimum abundance show clusters. highlight list labels ID show. wrap Boolean wrap scatterplots multiple lineages unique plot.","code":""},{"path":"caravagnalab.github.io/lineaGT/reference/plot_vaf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"VAF 2D scatterplot — plot_vaf","text":"list VAF scatterplots.","code":""},{"path":"caravagnalab.github.io/lineaGT/reference/plot_vaf.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"VAF 2D scatterplot — plot_vaf","text":"","code":"if (FALSE) plot_vaf(x, min_frac=0.1)"},{"path":"caravagnalab.github.io/lineaGT/reference/plot_vaf_time.html","id":null,"dir":"Reference","previous_headings":"","what":"VAF over time — plot_vaf_time","title":"VAF over time — plot_vaf_time","text":"Function plot VAFs mutations along time","code":""},{"path":"caravagnalab.github.io/lineaGT/reference/plot_vaf_time.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"VAF over time — plot_vaf_time","text":"","code":"plot_vaf_time(x, min_frac = 0, highlight = c(), timepoints_to_int = list())"},{"path":"caravagnalab.github.io/lineaGT/reference/plot_vaf_time.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"VAF over time — plot_vaf_time","text":"x mvnmm object. min_frac value [0,1] representing minimum abundance show clusters. highlight list labels ID show. timepoints_to_int list map timepoint value integer.","code":""},{"path":"caravagnalab.github.io/lineaGT/reference/plot_vaf_time.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"VAF over time — plot_vaf_time","text":"ggplot object.","code":""},{"path":"caravagnalab.github.io/lineaGT/reference/plot_vaf_time.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"VAF over time — plot_vaf_time","text":"","code":"if (FALSE) plot_vaf_time(x, min_frac=0.1)"},{"path":"caravagnalab.github.io/lineaGT/reference/print.mvnmm.html","id":null,"dir":"Reference","previous_headings":"","what":"Print method — print.mvnmm","title":"Print method — print.mvnmm","text":"add","code":""},{"path":"caravagnalab.github.io/lineaGT/reference/print.mvnmm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print method — print.mvnmm","text":"","code":"# S3 method for mvnmm print(x, ...)"},{"path":"caravagnalab.github.io/lineaGT/reference/print.mvnmm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print method — print.mvnmm","text":"x object class mvnmm ... Default extra paramaters","code":""},{"path":[]},{"path":"caravagnalab.github.io/lineaGT/reference/which_conda_env.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve the name of the currently loaded environment. — which_conda_env","title":"Retrieve the name of the currently loaded environment. — which_conda_env","text":"Function retrieve name currently loaded conda environment.","code":""},{"path":"caravagnalab.github.io/lineaGT/reference/which_conda_env.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve the name of the currently loaded environment. — which_conda_env","text":"","code":"which_conda_env()"},{"path":"caravagnalab.github.io/lineaGT/reference/which_conda_env.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve the name of the currently loaded environment. — which_conda_env","text":"character corresponding name loaded environment.","code":""}]
