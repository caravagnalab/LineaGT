group_by(Generation, Lineage)
means %>% as.data.frame() %>%
tibble::rownames_to_column(var="Identity") %>%
tidyr::pivot_longer(cols=starts_with("cov"), names_to="timepoints_lineage", values_to="Population") %>%
# reshape2::melt() %>%
tidyr::separate(timepoints_lineage, into=c("else", "Generation", "Lineage"), sep="\\.|\\_") %>%
mutate("else"=NULL)
means %>% as.data.frame() %>%
tibble::rownames_to_column(var="Identity") %>%
tidyr::pivot_longer(cols=starts_with("cov"), names_to="timepoints_lineage", values_to="Population") %>%
# reshape2::melt() %>%
tidyr::separate(timepoints_lineage, into=c("else", "Generation", "Lineage"), sep="\\.|\\_") %>%
mutate("else"=NULL) %>%
group_by(Generation, Lineage) %>%
mutate(Frequency=Population/sum(Population)) %>%
dplyr::ungroup()
devtools::load_all()
devtools::load_all()
plot_mullerplot(x, highlight=c(cluster), wrap=T, legend.pos="none")
exp = "HOMO_PGK"
x = readRDS(paste("../LineaGT_data/murine/",exp,"/",exp,".fitviber.Rds", sep=""))
## MULTIPAGE PLOT #####
clusters = select_relevant_clusters(x, min_frac=0.07)
design = "BBAAA
BBAAA
BBAAA
CCDD#
CCDD#"
df = x$vaf_dataframe
pdf(paste("./plots/", exp, ".viber_clusters.multipage.pdf",sep=""), height=10, width=12)
for (cluster in clusters) {
print(cluster)
cluster = "C_35"
if (df %>% filter(labels==cluster) %>% nrow > 1) {
muller = plot_mullerplot(x, highlight=c(cluster), wrap=T, legend.pos="none")
p = plot_vaf(x, highlight=c(cluster)) %>% patchwork::wrap_plots(guides="collect")
exp1 = plot_exp_fit(x, highlight=c(cluster)) + theme(legend.position="none")
exp2 = plot_exp_fit(x, highlight=c(cluster), mutations=T) + theme(legend.position="none")
wrapped = patchwork::wrap_plots(p, muller, exp1, exp2, design=design)
print(wrapped + patchwork::plot_annotation(title="VAF of mutations in experiments HOMO PGK across all lineages",
subtitle="threshold kept of 7%"))
# ggsave("./plots/HOMO_PGK.viber_clusters.c4.pdf", height=10, width=12)
}
}
dev.off
dev.off()
dev.off()
## MULTIPAGE PLOT #####
clusters = select_relevant_clusters(x, min_frac=0.07)
design = "BBAAA
BBAAA
BBAAA
CCDD#
CCDD#"
df = x$vaf_dataframe
pdf(paste("./plots/", exp, ".viber_clusters.multipage.pdf",sep=""), height=10, width=12)
for (cluster in clusters) {
print(cluster)
cluster = "C_35"
if (df %>% filter(labels==cluster) %>% nrow > 1) {
muller = plot_mullerplot(x, highlight=c(cluster), wrap=T, legend.pos="none")
p = plot_vaf(x, highlight=c(cluster)) %>% patchwork::wrap_plots(guides="collect")
exp1 = plot_exp_fit(x, highlight=c(cluster)) + theme(legend.position="none")
exp2 = plot_exp_fit(x, highlight=c(cluster), mutations=T) + theme(legend.position="none")
wrapped = patchwork::wrap_plots(p, muller, exp1, exp2, design=design)
print(wrapped + patchwork::plot_annotation(title="VAF of mutations in experiments HOMO PGK across all lineages",
subtitle="threshold kept of 7%"))
# ggsave("./plots/HOMO_PGK.viber_clusters.c4.pdf", height=10, width=12)
}
}
dev.off()
dev.off()
## MULTIPAGE PLOT #####
clusters = select_relevant_clusters(x, min_frac=0.07)
design = "BBAAA
BBAAA
BBAAA
CCDD#
CCDD#"
df = x$vaf_dataframe
pdf(paste("./plots/", exp, ".viber_clusters.multipage.pdf",sep=""), height=10, width=12)
for (cluster in clusters) {
print(cluster)
if (df %>% filter(labels==cluster) %>% nrow > 1) {
muller = plot_mullerplot(x, highlight=c(cluster), wrap=T, legend.pos="none")
p = plot_vaf(x, highlight=c(cluster)) %>% patchwork::wrap_plots(guides="collect")
exp1 = plot_exp_fit(x, highlight=c(cluster)) + theme(legend.position="none")
exp2 = plot_exp_fit(x, highlight=c(cluster), mutations=T) + theme(legend.position="none")
wrapped = patchwork::wrap_plots(p, muller, exp1, exp2, design=design)
print(wrapped + patchwork::plot_annotation(title="VAF of mutations in experiments HOMO PGK across all lineages",
subtitle="threshold kept of 7%"))
# ggsave("./plots/HOMO_PGK.viber_clusters.c4.pdf", height=10, width=12)
}
}
dev.off()
cluster = "C_5"
df %>% filter(labels==cluster) %>% nrow
plot_mullerplot(x, highlight=c(cluster), wrap=T, legend.pos="none")
plot_vaf(x, highlight=c(cluster)) %>% patchwork::wrap_plots(guides="collect")
plot_exp_fit(x, highlight=c(cluster)) + theme(legend.position="none")
plot_exp_fit(x, highlight=c(cluster), mutations=T) + theme(legend.position="none")
devtools::load_all()
plot_exp_fit(x, highlight=c(cluster), mutations=T) + theme(legend.position="none")
devtools::load_all()
plot_exp_fit(x, highlight=c(cluster), mutations=T) + theme(legend.position="none")
dev.off()
pdf(paste("./plots/", exp, ".viber_clusters.multipage.pdf",sep=""), height=10, width=12)
for (cluster in clusters) {
print(cluster)
cluster = "C_5"
if (df %>% filter(labels==cluster) %>% nrow > 1) {
muller = plot_mullerplot(x, highlight=c(cluster), wrap=T, legend.pos="none")
p = plot_vaf(x, highlight=c(cluster)) %>% patchwork::wrap_plots(guides="collect")
exp1 = plot_exp_fit(x, highlight=c(cluster)) + theme(legend.position="none")
exp2 = plot_exp_fit(x, highlight=c(cluster), mutations=T) + theme(legend.position="none")
wrapped = patchwork::wrap_plots(p, muller, exp1, exp2, design=design)
print(wrapped + patchwork::plot_annotation(title="VAF of mutations in experiments HOMO PGK across all lineages",
subtitle="threshold kept of 7%"))
# ggsave("./plots/HOMO_PGK.viber_clusters.c4.pdf", height=10, width=12)
}
}
## MULTIPAGE PLOT #####
clusters = select_relevant_clusters(x, min_frac=0.07)
design = "BBAAA
BBAAA
BBAAA
CCDD#
CCDD#"
df = x$vaf_dataframe
pdf(paste("./plots/", exp, ".viber_clusters.multipage.pdf",sep=""), height=10, width=12)
for (cluster in clusters) {
print(cluster)
# cluster = "C_5"
if (df %>% filter(labels==cluster) %>% nrow > 1) {
muller = plot_mullerplot(x, highlight=c(cluster), wrap=T, legend.pos="none")
p = plot_vaf(x, highlight=c(cluster)) %>% patchwork::wrap_plots(guides="collect")
exp1 = plot_exp_fit(x, highlight=c(cluster)) + theme(legend.position="none")
exp2 = plot_exp_fit(x, highlight=c(cluster), mutations=T) + theme(legend.position="none")
wrapped = patchwork::wrap_plots(p, muller, exp1, exp2, design=design)
print(wrapped + patchwork::plot_annotation(title="VAF of mutations in experiments HOMO PGK across all lineages",
subtitle="threshold kept of 7%"))
# ggsave("./plots/HOMO_PGK.viber_clusters.c4.pdf", height=10, width=12)
}
}
dev.off()
dev.off()
dev.off()
pdf(paste("./plots/", exp, ".viber_clusters.multipage.pdf",sep=""), height=10, width=12)
for (cluster in clusters) {
print(cluster)
# cluster = "C_5"
if (df %>% filter(labels==cluster) %>% nrow > 1) {
muller = plot_mullerplot(x, highlight=c(cluster), wrap=T, legend.pos="none")
p = plot_vaf(x, highlight=c(cluster)) %>% patchwork::wrap_plots(guides="collect")
exp1 = plot_exp_fit(x, highlight=c(cluster)) + theme(legend.position="none")
exp2 = plot_exp_fit(x, highlight=c(cluster), mutations=T) + theme(legend.position="none")
wrapped = patchwork::wrap_plots(p, muller, exp1, exp2, design=design)
print(wrapped + patchwork::plot_annotation(title="VAF of mutations in experiments HOMO PGK across all lineages",
subtitle="threshold kept of 7%"))
# ggsave("./plots/HOMO_PGK.viber_clusters.c4.pdf", height=10, width=12)
}
}
dev.off()
plot_mullerplot(x, which="frac")
plot_mullerplot(x, which="frac", wrap = T)
devtools::load_all()
plot_mullerplot(x, which="frac", wrap = T)
devtools::load_all()
plot_mullerplot(x, which="frac", wrap = T)
plot_mullerplot(x, which="pop", wrap = T)
plot_mullerplot(x, which="frac", min_frac=0.07, wrap=T)
devtools::load_all()
plot_mullerplot(x, which="frac", min_frac=0.07, wrap=T)
devtools::load_all()
plot_mullerplot(x, which="frac", min_frac=0.07, wrap=T)
devtools::load_all()
plot_mullerplot(x, which="frac", min_frac=0.07, wrap=T)
plot_mullerplot(x, which="frac", min_frac=0.07, wrap=T)
ggsave(paste("./plots/", exp, ".muller.frac.pdf",sep=""), height=10, width=12)
ggsave(paste("./plots/", exp, ".muller.frac.pdf",sep=""), height=8, width=10)
plot_mullerplot(x, which="pop", min_frac=0.07, wrap=T)
ggsave(paste("./plots/", exp, ".muller.pop.pdf",sep=""), height=8, width=10)
plot_mullerplot(x, which="fitness", min_frac=0.07, wrap=T)
plot_mullerplot(x, which="frac", min_frac=0.07, wrap=T) +
patchwork::plot_annotation(title="HOMO PGK with threshold at 7% of CCF")
ggsave(paste("./plots/", exp, ".muller.frac.pdf",sep=""), height=8, width=10)
devtools::load_all()
plot_mullerplot(x, which="pop", min_frac=0.07, wrap=T) +
patchwork::plot_annotation(title=paste(exp, "with threshold at 7% of CCF"))
ggsave(paste("./plots/", exp, ".muller.pop.pdf",sep=""), height=8, width=10)
plot_mullerplot(x, which="fitness", min_frac=0.07, wrap=T) +
patchwork::plot_annotation(title=paste(exp, "with threshold at 7% of CCF"))
ggsave(paste("./plots/", exp, ".muller.fitness.pdf",sep=""), height=8, width=10)
exp = "HOMO_LTR"
df.cov = paste("../LineaGT_data/murine/",exp,"/",exp,".coverage.csv", sep="") %>% read.csv() %>%
tidyr::pivot_wider(names_from="lineage", values_from=starts_with("cov")) %>%
replace(is.na(.), 0)
df.cov = filter_dataset(df.cov,
columns=df.cov %>% dplyr::select(starts_with("cov")) %>% colnames,
IS=df.cov$IS)
df.cov
x = fit(dataset=df.cov,
lineages=list("MNC","B","T","Myeloid"),
columns=df.cov %>% dplyr::select(starts_with("cov")) %>% colnames(),
IS_values=df.cov$IS,
k_interval=c(45,55),
n_runs=1)
saveRDS(x, paste("../LineaGT_data/murine/",exp,"/",exp,".fit.Rds", sep=""))
## MUTATIONS ####
x = readRDS(paste("../LineaGT_data/murine/",exp,"/",exp,".fit.Rds", sep=""))
df.vaf = vaf_df_from_file(paste("../LineaGT_data/murine/",exp,"/",exp,".vaf.csv", sep=""))
df.vaf = annotate_vaf_df(df.vaf, x, min_frac=0.07)
devtools::load_all()
## MUTATIONS ####
x = readRDS(paste("../LineaGT_data/murine/",exp,"/",exp,".fit.Rds", sep=""))
df.vaf = vaf_df_from_file(paste("../LineaGT_data/murine/",exp,"/",exp,".vaf.csv", sep=""))
paste("../LineaGT_data/murine/",exp,"/",exp,".vaf.csv"
,sep=""
)
df.vaf = annotate_vaf_df(df.vaf, x, min_frac=0.07)
df.vaf = vaf_df_from_file(paste("../LineaGT_data/murine/",exp,"/",exp,".vaf.csv", sep=""))
df.vaf = annotate_vaf_df(df.vaf, x, min_frac=0.07)
df.vaf
x_viber = run_viber(x, df.vaf, min_frac=0.07)
saveRDS(x_viber, paste("../LineaGT_data/murine/",exp,"/",exp,".fitviber.Rds", sep=""))
exp = "HOMO_LTR"
x = readRDS(paste("../LineaGT_data/murine/",exp,"/",exp,".fitviber.Rds", sep=""))
plot_mullerplot(x, which="frac", min_frac=0.07, wrap=T) +
patchwork::plot_annotation(title=paste(exp, "with threshold at 7% of CCF"))
ggsave(paste("./plots/", exp, ".muller.frac.pdf",sep=""), height=8, width=10)
plot_mullerplot(x, which="pop", min_frac=0.07, wrap=T) +
patchwork::plot_annotation(title=paste(exp, "with threshold at 7% of CCF"))
ggsave(paste("./plots/", exp, ".muller.pop.pdf",sep=""), height=8, width=10)
plot_mullerplot(x, which="fitness", min_frac=0.07, wrap=T) +
patchwork::plot_annotation(title=paste(exp, "with threshold at 7% of CCF"))
ggsave(paste("./plots/", exp, ".muller.fitness.pdf",sep=""), height=8, width=10)
## MULTIPAGE PLOT #####
clusters = select_relevant_clusters(x, min_frac=0.07)
clusters
design = "BBAAA
BBAAA
BBAAA
CCDD#
CCDD#"
df = x$vaf_dataframe
pdf(paste("./plots/", exp, ".viber_clusters.multipage.pdf",sep=""), height=10, width=12)
for (cluster in clusters) {
print(cluster)
# cluster = "C_5"
if (df %>% filter(labels==cluster) %>% nrow > 1) {
muller = plot_mullerplot(x, highlight=c(cluster), wrap=T, legend.pos="none")
p = plot_vaf(x, highlight=c(cluster)) %>% patchwork::wrap_plots(guides="collect")
exp1 = plot_exp_fit(x, highlight=c(cluster)) + theme(legend.position="none")
exp2 = plot_exp_fit(x, highlight=c(cluster), mutations=T) + theme(legend.position="none")
wrapped = patchwork::wrap_plots(p, muller, exp1, exp2, design=design)
print(wrapped + patchwork::plot_annotation(title="VAF of mutations in experiments HOMO PGK across all lineages",
subtitle="threshold kept of 7%"))
# ggsave("./plots/HOMO_PGK.viber_clusters.c4.pdf", height=10, width=12)
}
}
dev.off()
exp = "WT_LTR"
df.cov = paste("../LineaGT_data/murine/",exp,"/",exp,".coverage.csv", sep="") %>% read.csv() %>%
tidyr::pivot_wider(names_from="lineage", values_from=starts_with("cov")) %>%
replace(is.na(.), 0)
df.cov = filter_dataset(df.cov,
columns=df.cov %>% dplyr::select(starts_with("cov")) %>% colnames,
IS=df.cov$IS)
x = fit(dataset=df.cov,
lineages=list("MNC","B","T","Myeloid"),
columns=df.cov %>% dplyr::select(starts_with("cov")) %>% colnames(),
IS_values=df.cov$IS,
k_interval=c(45,55),
n_runs=1)
x$IC
x$runs$ic
x$runs$ic$BIC %>% plot
x$runs$ic$AIC %>% plot
x$runs$ic$ICL %>% plot
x$runs$ic$NLL %>% plot
x$losses %>% plot
x$gradients$mean %>% plot
x$gradients$sigma %>% plot
x$gradients$weights %>% plot
saveRDS(x, paste("../LineaGT_data/murine/",exp,"/",exp,".fit.Rds", sep=""))
exp
## MUTATIONS ####
x = readRDS(paste("../LineaGT_data/murine/",exp,"/",exp,".fit.Rds", sep=""))
df.vaf = vaf_df_from_file(paste("../LineaGT_data/murine/",exp,"/",exp,".vaf.csv", sep=""))
x$dimensions
vaf_file = paste("../LineaGT_data/murine/",exp,"/",exp,".vaf.csv", sep="")
## input is the file with the vaf, having a column per timepoint named dp.ref.alt
## final dataframe will have:
## mutation, lineage, IS, mut_type
## vaf_early/mid/late,
## cov_early/mid/late,
## dp_early/mid/late,
## ref_early/mid/late
## alt_early/mid/late
vaf_df = read.csv(vaf_file)
vaf_df
try(expr = { vaf_df = vaf_df  %>%
dplyr::rename_with(.cols=all_of(dplyr::starts_with("dp_")),
.fn=~paste0("cov_", str_replace_all(.x,"dp_",""))) }, silent = T)
vaf_df
vaf_df %>%
tidyr::pivot_longer(cols=starts_with("dp.ref.alt"), names_to="timepoint", values_to="dp:ref:alt")
vaf_df %>%
tidyr::pivot_longer(cols=starts_with("dp.ref.alt"), names_to="timepoint", values_to="dp:ref:alt") %>%
mutate(timepoint=stringr::str_replace_all(timepoint, "dp.ref.alt_", ""))
vaf_df %>%
tidyr::pivot_longer(cols=starts_with("dp.ref.alt"), names_to="timepoint", values_to="dp:ref:alt") %>%
mutate(timepoint=stringr::str_replace_all(timepoint, "dp.ref.alt_", "")) %>%
separate("dp:ref:alt", into=c("dp", "ref", "alt"), sep=":") %>%
mutate(ref=as.integer(ref), alt=as.integer(alt), dp=ref+alt)
vaf_df %>%
tidyr::pivot_longer(cols=starts_with("dp.ref.alt"), names_to="timepoint", values_to="dp:ref:alt") %>%
mutate(timepoint=stringr::str_replace_all(timepoint, "dp.ref.alt_", "")) %>%
separate("dp:ref:alt", into=c("dp", "ref", "alt"), sep=":")
vaf_df %>%
tidyr::pivot_longer(cols=starts_with("dp.ref.alt"), names_to="timepoint", values_to="dp:ref:alt") %>%
mutate(timepoint=stringr::str_replace_all(timepoint, "dp.ref.alt_", ""))
vaf_df %>%
tidyr::pivot_longer(cols=starts_with("dp.ref.alt"), names_to="timepoint", values_to="dp:ref:alt") %>%
mutate(timepoint=stringr::str_replace_all(timepoint, "dp.ref.alt_", "")) %>% View
devtools::load_all()
df.vaf = vaf_df_from_file(paste("../LineaGT_data/murine/",exp,"/",exp,".vaf.csv", sep=""))
df.vaf = annotate_vaf_df(df.vaf, x, min_frac=0.07)
df.vaf
x_viber = run_viber(x, df.vaf, min_frac=0.07)
saveRDS(x_viber, paste("../LineaGT_data/murine/",exp,"/",exp,".fitviber.Rds", sep=""))
exp = "WT_LTR"
x = readRDS(paste("../LineaGT_data/murine/",exp,"/",exp,".fitviber.Rds", sep=""))
plot_mullerplot(x, which="frac", min_frac=0.07, wrap=T) +
patchwork::plot_annotation(title=paste(exp, "with threshold at 7% of CCF"))
ggsave(paste("./plots/", exp, ".muller.frac.pdf",sep=""), height=8, width=10)
plot_mullerplot(x, which="pop", min_frac=0.07, wrap=T) +
patchwork::plot_annotation(title=paste(exp, "with threshold at 7% of CCF"))
ggsave(paste("./plots/", exp, ".muller.pop.pdf",sep=""), height=8, width=10)
plot_mullerplot(x, which="fitness", min_frac=0.07, wrap=T) +
patchwork::plot_annotation(title=paste(exp, "with threshold at 7% of CCF"))
ggsave(paste("./plots/", exp, ".muller.fitness.pdf",sep=""), height=8, width=10)
## MULTIPAGE PLOT #####
clusters = select_relevant_clusters(x, min_frac=0.07)
design = "BBAAA
BBAAA
BBAAA
CCDD#
CCDD#"
df = x$vaf_dataframe
pdf(paste("./plots/", exp, ".viber_clusters.multipage.pdf",sep=""), height=10, width=12)
for (cluster in clusters) {
print(cluster)
# cluster = "C_5"
if (df %>% filter(labels==cluster) %>% nrow > 1) {
muller = plot_mullerplot(x, highlight=c(cluster), wrap=T, legend.pos="none")
p = plot_vaf(x, highlight=c(cluster)) %>% patchwork::wrap_plots(guides="collect")
exp1 = plot_exp_fit(x, highlight=c(cluster)) + theme(legend.position="none")
exp2 = plot_exp_fit(x, highlight=c(cluster), mutations=T) + theme(legend.position="none")
wrapped = patchwork::wrap_plots(p, muller, exp1, exp2, design=design)
print(wrapped +
patchwork::plot_annotation(title="VAF of mutations in experiments", exp, "across all lineages",
subtitle="threshold kept of 7%"))
# ggsave("./plots/HOMO_PGK.viber_clusters.c4.pdf", height=10, width=12)
}
}
dev.off()
## MULTIPAGE PLOT #####
clusters = select_relevant_clusters(x, min_frac=0.07)
clusters
design = "BBAAA
BBAAA
BBAAA
CCDD#
CCDD#"
df = x$vaf_dataframe
pdf(paste("./plots/", exp, ".viber_clusters.multipage.pdf",sep=""), height=10, width=12)
for (cluster in clusters) {
print(cluster)
# cluster = "C_5"
if (df %>% filter(labels==cluster) %>% nrow > 1) {
muller = plot_mullerplot(x, highlight=c(cluster), wrap=T, legend.pos="none")
p = plot_vaf(x, highlight=c(cluster)) %>% patchwork::wrap_plots(guides="collect")
exp1 = plot_exp_fit(x, highlight=c(cluster)) + theme(legend.position="none")
exp2 = plot_exp_fit(x, highlight=c(cluster), mutations=T) + theme(legend.position="none")
wrapped = patchwork::wrap_plots(p, muller, exp1, exp2, design=design)
print(wrapped +
patchwork::plot_annotation(title="VAF of mutations in experiments", exp, "across all lineages",
subtitle="threshold kept of 7%"))
# ggsave("./plots/HOMO_PGK.viber_clusters.c4.pdf", height=10, width=12)
}
}
plot_mullerplot(x, highlight=c(cluster), wrap=T, legend.pos="none")
dev.off()
dev.off()
dev.off()
pdf(paste("./plots/", exp, ".viber_clusters.multipage.pdf",sep=""), height=10, width=12)
for (cluster in clusters) {
print(cluster)
# cluster = "C_5"
if (df %>% filter(labels==cluster) %>% nrow > 1) {
muller = plot_mullerplot(x, highlight=c(cluster), wrap=T, legend.pos="none")
p = plot_vaf(x, highlight=c(cluster)) %>% patchwork::wrap_plots(guides="collect")
exp1 = plot_exp_fit(x, highlight=c(cluster)) + theme(legend.position="none")
exp2 = plot_exp_fit(x, highlight=c(cluster), mutations=T) + theme(legend.position="none")
wrapped = patchwork::wrap_plots(p, muller, exp1, exp2, design=design)
print(wrapped +
patchwork::plot_annotation(title=paste("VAF of mutations in experiments", exp, "across all lineages"),
subtitle="threshold kept of 7%"))
# ggsave("./plots/HOMO_PGK.viber_clusters.c4.pdf", height=10, width=12)
}
}
dev.off()
exp = "HOMO_LTR"
x = readRDS(paste("../LineaGT_data/murine/",exp,"/",exp,".fitviber.Rds", sep=""))
## MULTIPAGE PLOT #####
clusters = select_relevant_clusters(x, min_frac=0.07)
design = "BBAAA
BBAAA
BBAAA
CCDD#
CCDD#"
df = x$vaf_dataframe
pdf(paste("./plots/", exp, ".viber_clusters.multipage.pdf",sep=""), height=10, width=12)
for (cluster in clusters) {
print(cluster)
# cluster = "C_5"
if (df %>% filter(labels==cluster) %>% nrow > 1) {
muller = plot_mullerplot(x, highlight=c(cluster), wrap=T, legend.pos="none")
p = plot_vaf(x, highlight=c(cluster)) %>% patchwork::wrap_plots(guides="collect")
exp1 = plot_exp_fit(x, highlight=c(cluster)) + theme(legend.position="none")
exp2 = plot_exp_fit(x, highlight=c(cluster), mutations=T) + theme(legend.position="none")
wrapped = patchwork::wrap_plots(p, muller, exp1, exp2, design=design)
print(wrapped +
patchwork::plot_annotation(title=paste("VAF of mutations in experiments", exp, "across all lineages"),
subtitle="threshold kept of 7%"))
# ggsave("./plots/HOMO_PGK.viber_clusters.c4.pdf", height=10, width=12)
}
}
dev.off()
exp = "WT_PGK"
df.cov = paste("../LineaGT_data/murine/",exp,"/",exp,".coverage.csv", sep="") %>% read.csv() %>%
tidyr::pivot_wider(names_from="lineage", values_from=starts_with("cov")) %>%
replace(is.na(.), 0)
df.cov = filter_dataset(df.cov,
columns=df.cov %>% dplyr::select(starts_with("cov")) %>% colnames,
IS=df.cov$IS)
x = fit(dataset=df.cov,
lineages=list("MNC","B","T","Myeloid"),
columns=df.cov %>% dplyr::select(starts_with("cov")) %>% colnames(),
IS_values=df.cov$IS,
k_interval=c(45,55),
n_runs=1)
saveRDS(x, paste("../LineaGT_data/murine/",exp,"/",exp,".fit.Rds", sep=""))
## MUTATIONS ####
x = readRDS(paste("../LineaGT_data/murine/",exp,"/",exp,".fit.Rds", sep=""))
df.vaf = vaf_df_from_file(paste("../LineaGT_data/murine/",exp,"/",exp,".vaf.csv", sep=""))
df.vaf = annotate_vaf_df(df.vaf, x, min_frac=0.07)
df.vaf %>% View
df.cov %>% View
x_viber = run_viber(x, df.vaf, min_frac=0.07)
saveRDS(x_viber, paste("../LineaGT_data/murine/",exp,"/",exp,".fitviber.Rds", sep=""))
exp
x = readRDS(paste("../LineaGT_data/murine/",exp,"/",exp,".fitviber.Rds", sep=""))
plot_mullerplot(x, which="frac", min_frac=0.07, wrap=T) +
patchwork::plot_annotation(title=paste(exp, "with threshold at 7% of CCF"))
ggsave(paste("./plots/", exp, ".muller.frac.pdf",sep=""), height=8, width=10)
plot_mullerplot(x, which="pop", min_frac=0.07, wrap=T) +
patchwork::plot_annotation(title=paste(exp, "with threshold at 7% of CCF"))
ggsave(paste("./plots/", exp, ".muller.pop.pdf",sep=""), height=8, width=10)
plot_mullerplot(x, which="fitness", min_frac=0.07, wrap=T) +
patchwork::plot_annotation(title=paste(exp, "with threshold at 7% of CCF"))
ggsave(paste("./plots/", exp, ".muller.fitness.pdf",sep=""), height=8, width=10)
## MULTIPAGE PLOT #####
clusters = select_relevant_clusters(x, min_frac=0.07)
design = "BBAAA
BBAAA
BBAAA
CCDD#
CCDD#"
df = x$vaf_dataframe
pdf(paste("./plots/", exp, ".viber_clusters.multipage.pdf",sep=""), height=10, width=12)
for (cluster in clusters) {
print(cluster)
# cluster = "C_5"
if (df %>% filter(labels==cluster) %>% nrow > 1) {
muller = plot_mullerplot(x, highlight=c(cluster), wrap=T, legend.pos="none")
p = plot_vaf(x, highlight=c(cluster)) %>% patchwork::wrap_plots(guides="collect")
exp1 = plot_exp_fit(x, highlight=c(cluster)) + theme(legend.position="none")
exp2 = plot_exp_fit(x, highlight=c(cluster), mutations=T) + theme(legend.position="none")
wrapped = patchwork::wrap_plots(p, muller, exp1, exp2, design=design)
print(wrapped +
patchwork::plot_annotation(title=paste("VAF of mutations in experiments", exp, "across all lineages"),
subtitle="threshold kept of 7%"))
# ggsave("./plots/HOMO_PGK.viber_clusters.c4.pdf", height=10, width=12)
}
}
dev.off()
exp = "HOMO_PGK"
x = readRDS(paste("../LineaGT_data/murine/",exp,"/",exp,".fitviber.Rds", sep=""))
plots = plot_scatter_density(x)
plots$`cov_mid_T:cov_late_T`
plots$`cov_early_B:cov_mid_B`
plots$`cov_early_MNC:cov_mid_MNC`
plots$`cov_early_T:cov_mid_T`
plots$`cov_early_B:cov_early_MNC`
plots$`cov_late_Myeloid:cov_late_T`
plot_marginal(x)
plot_marginal(x, highlight = c("C_10"))
plot_marginal(x, highlight = c("C_1"))
plot_marginal(x, highlight = c("C_2"))
plot_marginal(x, highlight = c("C_3"))
