wrapped = patchwork::wrap_plots(p, muller, exp1, exp2, design=design)
print(wrapped + patchwork::plot_annotation(title="VAF of mutations in experiments HOMO PGK across all lineages",
subtitle="threshold kept of 7%"))
ggsave("./plots/HOMO_PGK.viber_clusters.c11.pdf", height=10, width=12)
plot_mullerplot(obj, min_ccf=0.07)
plot_mullerplot(obj, min_ccf=0.07, wrap=T)
ggsave("plots/homo_pgk.muller.ccf.pdf", height=8, width = 8)
ggsave("plots/homo_pgk.muller.ccf.pdf", height=6, width = 8)
plot_mullerplot(obj, min_ccf=0.07, wrap=T)+ patchwork::plot_annotation(title="VAF of mutations in experiments HOMO PGK across all lineages",
subtitle="threshold kept of 7%"))
plot_mullerplot(obj, min_ccf=0.07, wrap=T)+ patchwork::plot_annotation(title="VAF of mutations in experiments HOMO PGK across all lineages", subtitle="threshold kept of 7%"))
plot_mullerplot(obj, min_ccf=0.07, wrap=T) %>% patchwork::plot_annotation(title="VAF of mutations in experiments HOMO PGK across all lineages", subtitle="threshold kept of 7%"))
plot_mullerplot(obj, min_ccf=0.07, wrap=T) & patchwork::plot_annotation(title="VAF of mutations in experiments HOMO PGK across all lineages", subtitle="threshold kept of 7%"))
plot_mullerplot(obj, min_ccf=0.07, wrap=T) & patchwork::plot_annotation(title="VAF of mutations in experiments HOMO PGK across all lineages", subtitle="threshold kept of 7%")
ggsave("plots/homo_pgk.muller.ccf.pdf", height=6, width = 8)
plot_mullerplot(obj, min_ccf=0.07, wrap=T)
ggsave("plots/homo_pgk.muller.ccf.pdf", height=6, width = 8)
ggsave("plots/homo_pgk.muller.ccf.pdf", height=5, width = 8)
plot_mullerplot(obj, min_ccf=0.07, wrap=T, which="pop")
ggsave("plots/homo_pgk.muller.pop.pdf", height=5, width = 8)
plot_mullerplot(obj, min_ccf=0.07, wrap=T, which="fitness")
ggsave("plots/homo_pgk.muller.fitness.pdf", height=5, width = 6)
plot_scatter_density(obj, highlight = c("C_11"))
pl = plot_scatter_density(obj, highlight = c("C_11"))
pl$`cov_early_B:cov_early_MNC`
highlight_palette
obj$color_palette
highlight = c("C_11")
color_palette = highlight_palette(obj$color_palette, highlight)
color_palette
devtools::load_all()
pl = plot_scatter_density(obj, highlight = c("C_11"))
pl$`cov_early_B:cov_mid_B`
cluster="C_4"
muller = plot_mullerplot(obj, highlight=c(cluster), wrap=T, legend.pos="none")
p = plot_vaf(obj, highlight=c(cluster)) %>% patchwork::wrap_plots(guides="collect")
exp1 = plot_exp_fit(obj, highlight=c(cluster)) + theme(legend.position="none")
exp2 = plot_exp_fit(obj, highlight=c(cluster), viber=T) + theme(legend.position="none")
wrapped = patchwork::wrap_plots(p, muller, exp1, exp2, design=design)
wrapped
print(wrapped + patchwork::plot_annotation(title="VAF of mutations in experiments HOMO PGK across all lineages",
subtitle="threshold kept of 7%"))
ggsave("./plots/HOMO_PGK.viber_clusters.c4.pdf", height=10, width=12)
devtools::load_all()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
pkgdown::build_site()
pkgdown::build_site()
pl = plot_scatter_density(obj)
devtools::load_all()
pl = plot_scatter_density(obj)
pl$`cov_early_B:cov_early_Myeloid`
obj$color_palette
pl = plot_scatter_density(obj, highlight = c("C_11"))
obj$color_palette
pl$`cov_early_B:cov_early_Myeloid`
plot_mullerplot(obj)
plot_mullerplot(obj, wrap=T)
plot_mullerplot(obj, which="pop", wrap=T)
plot_mullerplot(obj, which="fitness", wrap=T)
plot_vaf(obj, highlight=c("C_11"))
devtools::load_all()
devtools::document()
?install.packages()
usethis::use_github_action("check-standard")
devtools::as.package()
devtools::load_all()
devtools::document()
pkgdown::build_site()
devtools::load_all()
get_dataset()
homo_ltr.cov = "../../model/datasets/HOMO_LTR.coverage.csv" %>% read.csv() %>%
tidyr::pivot_wider(names_from="lineage", values_from=starts_with("cov")) %>%
replace(is.na(.), 0) %>% filter(IS!=".")
homo_ltr.cov = filter_dataset(homo_ltr.cov,
columns=homo_ltr.cov %>% dplyr::select(starts_with("cov")) %>% colnames,
IS=homo_ltr.cov$IS)
homo_ltr.cov = "../../internship_2021/mutation_dynamics/analysis/model/datasets/HOMO_LTR.coverage.csv" %>% read.csv() %>%
tidyr::pivot_wider(names_from="lineage", values_from=starts_with("cov")) %>%
replace(is.na(.), 0) %>% filter(IS!=".")
homo_ltr.cov = filter_dataset(homo_ltr.cov,
columns=homo_ltr.cov %>% dplyr::select(starts_with("cov")) %>% colnames,
IS=homo_ltr.cov$IS)
homo_ltr.cov = "../../internship_2021/mutation_dynamics/analysis/model/datasets/HOMO_LTR.coverage.csv" %>% read.csv() %>%
tidyr::pivot_wider(names_from="lineage", values_from=starts_with("cov")) %>%
replace(is.na(.), 0) %>% filter(IS!=".")
homo_ltr.cov
filter_dataset(homo_ltr.cov,
columns=homo_ltr.cov %>% dplyr::select(starts_with("cov")) %>% colnames,
IS=homo_ltr.cov$IS)
dataset = homo_ltr.cov; columns=homo_ltr.cov %>% dplyr::select(starts_with("cov")) %>% colnames; IS=homo_ltr.cov$IS
py_pkg = reticulate::import("pylineaGT")
x = initialize_object(K=as.integer(1), dataset=dataset, lineages=list(), columns=columns, IS_values=IS)
py_pkg$mvnmm$MVNMixtureModel(K=as.integer(K), data=dataset %>% dplyr::select(all_of(columns)),
lineages=lineages, IS=IS_values, columns=columns)
K=as.integer(1)
py_pkg$mvnmm$MVNMixtureModel(K=as.integer(K), data=dataset %>% dplyr::select(all_of(columns)),
lineages=lineages, IS=IS_values, columns=columns)
lineages(list())
lineages = list()
py_pkg$mvnmm$MVNMixtureModel(K=as.integer(K), data=dataset %>% dplyr::select(all_of(columns)),
lineages=lineages, IS=IS_values, columns=columns)
IS_values = list()
py_pkg$mvnmm$MVNMixtureModel(K=as.integer(K), data=dataset %>% dplyr::select(all_of(columns)),
lineages=lineages, IS=IS_values, columns=columns)
py_model = py_pkg$mvnmm$MVNMixtureModel(K=as.integer(K), data=dataset %>% dplyr::select(all_of(columns)),
lineages=lineages, IS=IS_values, columns=columns)
get_object(py_model)
class(py_model)
devtools::load_all()
get_object(py_model)
devtools::load_all()
get_object(py_model)
get_object(py_model)$dataset
devtools::load_all()
get_object(py_model)$dataset
py_model$dataset
x$dataset$detach()$numpy() %>% data.frame() %>% dplyr::mutate_all(as.integer)
devtools::load_all()
devtools::load_all()
get_model
devtools::load_all()
get_dataframe(py_model)
devtools::load_all()
get_dataframe(py_model)
py_model
devtools::load_all()
homo_ltr.cov = "../../internship_2021/mutation_dynamics/analysis/model/datasets/HOMO_LTR.coverage.csv" %>% read.csv() %>%
tidyr::pivot_wider(names_from="lineage", values_from=starts_with("cov")) %>%
replace(is.na(.), 0) %>% filter(IS!=".")
homo_ltr.cov = filter_dataset(homo_ltr.cov,
columns=homo_ltr.cov %>% dplyr::select(starts_with("cov")) %>% colnames,
IS=homo_ltr.cov$IS)
devtools::load_all()
homo_ltr.cov = filter_dataset(homo_ltr.cov,
columns=homo_ltr.cov %>% dplyr::select(starts_with("cov")) %>% colnames,
IS=homo_ltr.cov$IS)
homo_ltr.cov
K=50
devtools::load_all()
devtools::load_all()
single_fit(20, homo_ltr.cov, lineages=list("MNC","B","T","Myeloid"), columns = homo_ltr.cov %>% dplyr:select(starts_with("cov")), IS=homo_ltr.cov$IS)
devtools::load_all()
single_fit(20, homo_ltr.cov, lineages=list("MNC","B","T","Myeloid"), columns = homo_ltr.cov %>% dplyr:select(starts_with("cov")), IS=homo_ltr.cov$IS)
library(dplyr)
single_fit(20, homo_ltr.cov, lineages=list("MNC","B","T","Myeloid"), columns = homo_ltr.cov %>% dplyr:select(starts_with("cov")), IS=homo_ltr.cov$IS)
single_fit(20, homo_ltr.cov, lineages=list("MNC","B","T","Myeloid"), columns = homo_ltr.cov %>% dplyr::select(starts_with("cov")), IS=homo_ltr.cov$IS)
single_fit(20, homo_ltr.cov, lineages=list("MNC","B","T","Myeloid"), columns = homo_ltr.cov %>% dplyr::select(starts_with("cov")) %>% colnames, IS=homo_ltr.cov$IS)
x = single_fit(20, homo_ltr.cov, lineages=list("MNC","B","T","Myeloid"), columns = homo_ltr.cov %>% dplyr::select(starts_with("cov")) %>% colnames, IS=homo_ltr.cov$IS)
x = single_fit(50, homo_ltr.cov, lineages=list("MNC","B","T","Myeloid"), columns = homo_ltr.cov %>% dplyr::select(starts_with("cov")) %>% colnames, IS=homo_ltr.cov$IS)
devtools::load_all()
x
devtools::load_all()
x
x
x$dataframe
devtools::load_all()
x
x
x
devtools::load_all()
x
devtools::load_all()
x
devtools::load_all()
x
devtools::load_all()
devtools::document()
devtools::load_all()
devtools::load_all()
x$losses
x = single_fit(50, homo_ltr.cov, lineages=list("MNC","B","T","Myeloid"), columns = homo_ltr.cov %>% dplyr::select(starts_with("cov")) %>% colnames, IS=homo_ltr.cov$IS)
x
x$gradients
devtools::load_all()
x = single_fit(50, homo_ltr.cov, lineages=list("MNC","B","T","Myeloid"), columns = homo_ltr.cov %>% dplyr::select(starts_with("cov")) %>% colnames, IS=homo_ltr.cov$IS)
devtools::loa
devtools::load_all()
devtools::document()
pkgdown::build_search()
pkgdown::build_site()
homo_pgk.cov = "../LineaGT_data/murine/HOMO_PGK.coverage.csv" %>% read.csv() %>%
tidyr::pivot_wider(names_from="lineage", values_from=starts_with("cov")) %>%
replace(is.na(.), 0)
homo_pgk.cov
homo_pgk.cov %>% saveRDS("../LineaGT_data/murine/HOMO_LTR.coverage.Rds")
homo_pgk.cov = "../LineaGT_data/murine/HOMO_PGK.coverage.csv" %>% read.csv() %>%
tidyr::pivot_wider(names_from="lineage", values_from=starts_with("cov")) %>%
replace(is.na(.), 0) %>% filter(IS != ".")
homo_pgk.cov %>% saveRDS("../LineaGT_data/murine/HOMO_LTR.coverage.Rds")
homo_pgk.cov
homo_ltr.cov = "../LineaGT_data/murine/HOMO_LTR.coverage.csv" %>% read.csv() %>%
tidyr::pivot_wider(names_from="lineage", values_from=starts_with("cov")) %>%
replace(is.na(.), 0) %>% filter(IS != ".")
homo_ltr.cov %>% saveRDS("../LineaGT_data/murine/HOMO_LTR.coverage.Rds")
homo_pgk.cov = "../LineaGT_data/murine/HOMO_PGK.coverage.csv" %>% read.csv() %>%
tidyr::pivot_wider(names_from="lineage", values_from=starts_with("cov")) %>%
replace(is.na(.), 0) %>% filter(IS != ".")
homo_pgk.cov %>% saveRDS("../LineaGT_data/murine/HOMO_PGK.coverage.Rds")
cov = "../LineaGT_data/murine/HOMO_PGK.coverage.csv" %>% read.csv() %>%
tidyr::pivot_wider(names_from="lineage", values_from=starts_with("cov")) %>%
replace(is.na(.), 0) %>% filter(IS != ".")
cov %>% saveRDS("../LineaGT_data/murine/HOMO_PGK.coverage.Rds")
cov = "../LineaGT_data/murine/HOMO_LTR.coverage.csv" %>% read.csv() %>%
tidyr::pivot_wider(names_from="lineage", values_from=starts_with("cov")) %>%
replace(is.na(.), 0) %>% filter(IS != ".")
cov %>% saveRDS("../LineaGT_data/murine/HOMO_LTR.coverage.Rds")
cov = "../LineaGT_data/murine/WT_LTR.coverage.csv" %>% read.csv() %>%
tidyr::pivot_wider(names_from="lineage", values_from=starts_with("cov")) %>%
replace(is.na(.), 0) %>% filter(IS != ".")
cov %>% saveRDS("../LineaGT_data/murine/WT_LTR.coverage.Rds")
cov = "../LineaGT_data/murine/WT_PGK.coverage.csv" %>% read.csv() %>%
tidyr::pivot_wider(names_from="lineage", values_from=starts_with("cov")) %>%
replace(is.na(.), 0) %>% filter(IS != ".")
cov %>% saveRDS("../LineaGT_data/murine/WT_PGK.coverage.Rds")
gc()
homo_ltr.cov = readRDS("../LineaGT_data/murine/HOMO_LTR.coverage.Rds")
homo_ltr.cov
runif(100, min=1, max=nrow(homo_ltr.cov))
runif(100, min=1, max=nrow(homo_ltr.cov)) %>% as.integer()
idxs = runif(100, min=1, max=nrow(homo_ltr.cov)) %>% as.integer()
dataset = homo_ltr.cov[idxs]
dataset = homo_ltr.cov[idxs,]
dataset
dataset %>% dplyr::select(IS, starts_with(cov))
dataset %>% dplyr::select("IS", starts_with(cov))
dataset %>% dplyr::select(starts_with("cov"))
dataset %>% dplyr::select(starts_with("cov"),"IS")
dataset %>% dplyr::select(IS,starts_with("cov"))
dataset = dataset %>% dplyr::select(IS,starts_with("cov"))
dataset %>% mutate(IS=paste("IS",1:nrow(dataset),sep="."))
dataset = dataset %>% mutate(IS=paste("IS",1:nrow(dataset),sep="."))
dataset
dataset %>% rename_with(.cols=starts_with("cov"), .fn=strsplit(split="_"))
dataset %>% rename_with(.cols=starts_with("cov"), .fn=strsplit(.cols,split="_"))
dataset %>% rename_with(.cols=starts_with("cov"), .fn=strsplit)
dataset %>% rename_with(.cols=starts_with("cov"), .fn=strsplit(dataset %>% dplyr::select(starts_with("cov")) %>% colnames(), split="_")[1:2])
dataset %>% rename_with(.cols=starts_with("cov"), .fn= ~ strsplit(.,"_"))
dataset %>% rename_with(.cols=starts_with("cov"), .fn= ~ str_replace_all(c("MNC","B","T","Myeloid"),"")
)
dataset %>% rename_with(.cols=starts_with("cov"), .fn= ~ str_replace_all(.,c("MNC","B","T","Myeloid"),"")
)
dataset %>% rename_with(.cols=starts_with("cov"), .fn= ~ str_replace_all(.,"MNC",""))
dataset %>% rename_with(.cols=starts_with("cov"), .fn= ~ str_replace_all(.,"_MNC",""))
dataset %>% rename_with(.cols=starts_with("cov"), .fn= ~ str_replace_all(.,"_MNC","")) %>% rename_with(.cols=starts_with("cov"), .fn= ~ str_replace_all(.,"_B","")) %>% .cols=starts_with("cov"), rename_with(.cols=starts_with("cov"), .fn= ~ str_replace_all(.,"_T","")) %>% rename_with(.cols=starts_with("cov"), .fn= ~ str_replace_all(.,"_Myeloid","")))
dataset %>% rename_with(.cols=starts_with("cov"), .fn= ~ str_replace_all(.,"_MNC","")) %>% rename_with(.cols=starts_with("cov"), .fn= ~ str_replace_all(.,"_B","")) %>% rename_with(.cols=starts_with("cov"), .fn= ~ str_replace_all(.,"_T","")) %>% rename_with(.cols=starts_with("cov"), .fn= ~ str_replace_all(.,"_Myeloid","")))
dataset %>% rename_with(.cols=starts_with("cov"), .fn= ~ str_replace_all(.,"_MNC","")) %>% rename_with(.cols=starts_with("cov"), .fn= ~ str_replace_all(.,"_B","")) %>% rename_with(.cols=starts_with("cov"), .fn= ~ str_replace_all(.,"_T","")) %>% rename_with(.cols=starts_with("cov"), .fn= ~ str_replace_all(.,"_Myeloid","")))
dataset %>% rename_with(.cols=starts_with("cov"), .fn= ~ str_replace_all(.,"_MNC","")) %>% rename_with(.cols=starts_with("cov"), .fn= ~ str_replace_all(.,"_B","")) %>% rename_with(.cols=starts_with("cov"), .fn= ~ str_replace_all(.,"_T","")) %>% rename_with(.cols=starts_with("cov"), .fn= ~ str_replace_all(.,"_Myeloid",""))
dataset %>% rename_with(.cols=starts_with("cov"), .fn= ~ str_replace_all(.,"_MNC",".1")) %>% rename_with(.cols=starts_with("cov"), .fn= ~ str_replace_all(.,"_B",".2")) %>% rename_with(.cols=starts_with("cov"), .fn= ~ str_replace_all(.,"_T",".3")) %>% rename_with(.cols=starts_with("cov"), .fn= ~ str_replace_all(.,"_Myeloid",".4"))
dataset = dataset %>% rename_with(.cols=starts_with("cov"), .fn= ~ str_replace_all(.,"_MNC",".1")) %>% rename_with(.cols=starts_with("cov"), .fn= ~ str_replace_all(.,"_B",".2")) %>% rename_with(.cols=starts_with("cov"), .fn= ~ str_replace_all(.,"_T",".3")) %>% rename_with(.cols=starts_with("cov"), .fn= ~ str_replace_all(.,"_Myeloid",".4"))
dataset
runif(1, min=0,max=100)
runif(100, min=0,max=100) %>% as.integer() %>% mean
runif(100, min=0,max=100) %>% mean %>% as.integer()
dataset[, starts_with("cov")] + runif(100, min=0,max=100) %>% mean %>% as.integer()
dataset + runif(100, min=0,max=100) %>% mean %>% as.integer()
dataset[,-"IS"] + runif(100, min=0,max=100) %>% mean %>% as.integer()
dataset[,dataset %>% dplyr::select(starts_with("cov")) %>% colnames()] + runif(100, min=0,max=100) %>% mean %>% as.integer()
data.frame(replicate(10,sample(0:1,1000,rep=TRUE)))
data.frame(replicate(12,sample(0:10,nrow(dataset),rep=TRUE)))
dataset[,dataset %>% dplyr::select(starts_with("cov")) %>% colnames()] + data.frame(replicate(12,sample(0:10,nrow(dataset),rep=TRUE)))
dataset[,dataset %>% dplyr::select(starts_with("cov")) %>% colnames()] = dataset[,dataset %>% dplyr::select(starts_with("cov")) %>% colnames()] + data.frame(replicate(12,sample(0:10,nrow(dataset),rep=TRUE)))
dataset
usethis::use_data(dataset)
load("C:/Users/Elena/Desktop/tirocinio/repo/LineaGT/data/dataset.rda")
devtools::load_all()
lineaGT::dataset
devtools::document()
homo_ltr.cov = readRDS("../LineaGT_data/murine/HOMO_LTR.coverage.Rds")
homo_ltr.cov
dataset_filt = dataset %>% dplyr::select(starts_with("cov")) %>%
filter_dataset(IS=dataset$IS)
library(lineaGT)
dataset_filt = dataset %>% dplyr::select(starts_with("cov")) %>%
filter_dataset(IS=dataset$IS)
devtools::load_all()
library(lineaGT)
dataset_filt = dataset %>% dplyr::select(starts_with("cov")) %>%
filter_dataset(IS=dataset$IS)
dataset_filt
dataset_filt$IS
dataset_filt %>% View
dataset = dataset %>% rename_with(.cols=starts_with("cov"), .fn= ~ str_replace_all(.,".1",".L1")) %>% rename_with(.cols=starts_with("cov"), .fn= ~ str_replace_all(.,".2",".L2")) %>% rename_with(.cols=starts_with("cov"), .fn= ~ str_replace_all(.,".3",".L3")) %>% rename_with(.cols=starts_with("cov"), .fn= ~ str_replace_all(.,".4",".L4"))
usethis::use_data(dataset)
usethis::use_data(dataset, overwrite = T)
devtools::document()
dataset
dataset_filt = dataset %>% dplyr::select(starts_with("cov")) %>%
filter_dataset(IS=dataset$IS)
dataset_filt = dataset %>% dplyr::select(starts_with("cov")) %>%
filter_dataset(IS=dataset$IS)
library(lineaGT)
x = dataset_filt %>% dplyr::select(starts_with("cov")) %>%
fit(lineages=list("L1","L2","L3","L4"), IS_values=dataset_filt$IS, steps=500, n_runs=2)
x = dataset_filt %>% dplyr::select(IS, starts_with("cov")) %>%
fit(lineages=list("L1","L2","L3","L4"), IS_values=dataset_filt$IS, steps=500, n_runs=2)
dataset_filt
dataset_filt$IS
devtools::load_all()
x = dataset_filt %>% dplyr::select(starts_with("cov")) %>%
fit(lineages=list("L1","L2","L3","L4"), IS_values=dataset_filt$IS, steps=500, n_runs=2)
devtools::load_all()
devtools::load_all()
devtools::load_all()
x = dataset_filt %>% dplyr::select(starts_with("cov")) %>%
fit(lineages=list("L1","L2","L3","L4"), IS_values=dataset_filt$IS, steps=500, n_runs=2)
devtools::load_all()
x = dataset_filt %>% dplyr::select(starts_with("cov")) %>% single_fit(k=10, lineages=list("L1","L2","L3","L4"))
x
x$gradients
x$gradients$mean
x$gradients$sigma
devtools::load_all()
library(lineaGT)
dataset_filt = dataset %>% dplyr::select(starts_with("cov")) %>%
filter_dataset(IS=dataset$IS)
x = dataset_filt %>% dplyr::select(starts_with("cov")) %>%
fit(lineages=list("L1","L2","L3","L4"), IS_values=dataset_filt$IS, steps=500, n_runs=2)
x = dataset_filt %>% dplyr::select(starts_with("cov")) %>%
fit(lineages=list("L1","L2","L3","L4"), IS_values=dataset_filt$IS, steps=500, n_runs=2, k_interval=c(40,60))
x = dataset_filt %>% dplyr::select(starts_with("cov")) %>%
fit(lineages=list("L1","L2","L3","L4"), IS_values=dataset_filt$IS, steps=500, n_runs=2, k_interval=c(10,15))
devtools::load_all()
pkg = reticulate::import("pylineaGT")
pkg$plot_model
devtools::load_all()
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
library(lineaGT)
x = dataset_filt %>% dplyr::select(starts_with("cov")) %>%
fit(lineages=list("L1","L2","L3","L4"), IS_values=dataset_filt$IS, steps=500, n_runs=2, k_interval=c(10,15))
x
x$ic
x$losses
x$grads
x$grads$iter_500
x$grads$iter_15
x$grads %>% rownames()
devtools::load_all()
x = dataset_filt %>% dplyr::select(starts_with("cov")) %>%
fit(lineages=list("L1","L2","L3","L4"), IS_values=dataset_filt$IS, steps=500, n_runs=2, k_interval=c(10,15))
x
x$losses
x$runs
x$runs$ic
fitted_example = x
usethis::use_data(fitted_example)
devtools::document()
x$K
x
x$dataframe
x$dataframe$labels
homo_ltr.cov = readRDS("../LineaGT_data/murine/HOMO_LTR/HOMO_LTR.coverage.Rds")
dataset = readRDS("../LineaGT_data/murine/HOMO_LTR/HOMO_LTR.coverage.Rds")
dataset_filt = dataset %>% dplyr::select(starts_with("cov")) %>%
filter_dataset(IS=dataset$IS)
devtools::load_all()
filter_dataset(IS=dataset$IS)
dataset_filt = dataset %>% dplyr::select(starts_with("cov")) %>%
filter_dataset(IS=dataset$IS)
dataset_filt
x = dataset_filt %>% dplyr::select(starts_with("cov")) %>%
fit(lineages=list("MNC","B","T","Myeloid"), IS_values=dataset_filt$IS, steps=500, n_runs=2, k_interval=c(40,55))
x = dataset_filt %>% dplyr::select(starts_with("cov")) %>%
fit(lineages=list("MNC","B","T","Myeloid"), IS_values=dataset_filt$IS, steps=500, n_runs=1, k_interval=c(40,55))
x$dataframe
x$runs
x$params
saveRDS(x, "../LineaGT_data/murine/HOMO_LTR/HOMO_LTR.fit.Rds")
ll = plot_scatter_density(x)
get_mean(x)
x$params$mean
get_covariance_Sigma(x)
py_model = get_model(x)
py_model
tryCatch(
expr = {
clusters_sort = get_unique_labels(py_model)
mean = py_model$params$mean$detach()$numpy()
colnames(mean) = py_model$dimensions
rownames(mean) = clusters_sort
return(mean) },
error = function(e) return(list()) )
clusters_sort = get_unique_labels(py_model)
mean
clusters_sort
mean = py_model$params$mean$detach()$numpy()
mean
colnames(mean) = py_model$dimensions
rownames(mean) = clusters_sort
mean
tryCatch(
expr = {
clusters_sort = get_unique_labels(py_model)
mean = py_model$params$mean$detach()$numpy()
colnames(mean) = py_model$dimensions
rownames(mean) = clusters_sort
return(mean) },
error = function(e) return(list()) )
tryCatch(
expr = {
clusters_sort = get_unique_labels(py_model)
mean = py_model$params$mean$detach()$numpy()
colnames(mean) = py_model$dimensions
rownames(mean) = clusters_sort
print("Done")
return(mean) },
error = function(e) return(list()) )
tryCatch(
expr = {
clusters_sort = get_unique_labels(py_model)
weights = py_model$params$weights$detach()$numpy()
names(weights) = clusters_sort
return(weights) },
error = function(e) {print(e); return(list())} )
devtools::load_all()
get_mean(x)
get_mean(x$py_model)
devtools::load_all()
get_mean(x$py_model)
devtools::load_all()
x = dataset_filt %>% dplyr::select(starts_with("cov")) %>%
fit(lineages=list("MNC","B","T","Myeloid"), IS_values=dataset_filt$IS, steps=500, n_runs=1, k_interval=c(46))
x = dataset_filt %>% dplyr::select(starts_with("cov")) %>%
fit(lineages=list("MNC","B","T","Myeloid"), IS_values=dataset_filt$IS, steps=500, n_runs=1, k_interval=c(46,46))
x$params$mean
saveRDS(x, "../LineaGT_data/murine/HOMO_LTR/HOMO_LTR.fit.Rds")
plot_scatter_density(x)
ll = plot_scatter_density(x)
ll$`cov_early_B:cov_early_MNC`
ll %>% patchwork::wrap_plots(guides="collect")
ll$`cov_early_B:cov_mid_B`
vaf_dataset = vaf_df_from_file("../LineaGT_data/murine/HOMO_LTR/HOMO_LTR.vaf.csv")
annotate_vaf_df(vaf_dataset, x, min_ccf=0.07)
vaf_dataset = annotate_vaf_df(vaf_dataset, x, min_ccf=0.07)
add_vaf(obj.homo_pgk, homo_pgk.vaf)
add_vaf(x, vaf_dataset)
x = add_vaf(x, vaf_dataset)
x$vaf_dataframe
saveRDS(x, "../LineaGT_data/murine/HOMO_LTR/HOMO_LTR.fit.Rds")
x_viber = run_viber(c, min_ccf=0.07)
x_viber = run_viber(x, min_ccf=0.07)
vaf_df = x$vaf_dataframe
viber_input = get_input_viber(vaf_df)
viber_input
clusters_joined = intersect(select_relevant_clusters(x, min_ccf), highlight)
viber_input$trials
viber_input$trials == 0
viber_input$trials == 0 %>% sum
(viber_input$trials == 0) %>% sum
(viber_input$trials == 0) %>% View
(viber_input$trials == 0) %>% View
vaf_dataset
vaf_df
viber_input$trials
viber_input$trials %>% filter(any(.==0))
viber_input$trials %>% filter(any(.!=0))
viber_input$trials %>% filter(all(.!=0))
viber_input$trials %>% filter(all(.==0))
viber_input$trials %>% filter(all(everything()==0))
viber_input$trials %>% any(0)
viber_input$trials[viber_input$trials!=0,]
viber_input$trials[viber_input$trials>0,]
viber_input$trials[viber_input$trials>0]
vaf_dataset %>% filter(across(everything(), ~ !0))
vaf_dataset %>% filter(dplyr::across(everything(), ~ !0))
vaf_dataset %>% if_all(0)
vaf_dataset %>% dplyr::if_all(0)
vaf_dataset %>% dplyr::if_all(dplyr::across(everything(), ~ !0))
vaf_dataset %>% dplyr::if_all(everything(), ~ !0)
vaf_dataset %>% dplyr::if_all(dplyr::everything(), ~ !0)
vaf_dataset %>% dplyr::if_all(.fn= ~ !0)
vaf_dataset %>% filter_all(dplyr::across(everything(), ~ !0))
vaf_dataset %>% dplyr::filter_all(dplyr::across(everything(), ~ !0))
vaf_dataset %>% dplyr::filter_all(everything(), ~ !0)
vaf_dataset %>% filter(dplyr::across(everything(), ~ !0))
viber_input$trials %>% filter(dplyr::across(everything(), ~ !0))
(viber_input$trials %>% filter(dplyr::across(everything(), ~ !0)))
(viber_input$trials %>% filter(dplyr::across(everything(), ~ !0))) %>% View
(viber_input$trials %>% filter(dplyr::across(everything(), ~ 0))) %>% View
(viber_input$trials %>% filter(dplyr::across(everything(), ~ !0))) %>% View
?if_all
(viber_input$trials %>% filter(dplyr::if_all(everything(), ~ !0))) %>% View
(viber_input$trials %>% filter(dplyr::if_any(everything(), ~ !0))) %>% View
(viber_input$trials %>% filter(dplyr::if_any(everything(), ~ 0))) %>% View
(viber_input$trials %>% filter(dplyr::if_any(everything(), ~ =0))) %>% View
(viber_input$trials %>% filter(dplyr::if_any(everything(), ~ ==0))) %>% View
(viber_input$trials %>% filter(dplyr::if_any(everything(), ~ .==0))) %>% View
(viber_input$trials %>% filter(dplyr::if_any(everything(), ~ .!=0))) %>% View
(viber_input$trials %>% filter(dplyr::if_all(everything(), ~ .!=0))) %>% View
(viber_input$trials %>% filter(dplyr::if_all(everything(), ~ .!=0)))$mutations
(viber_input$trials %>% filter(dplyr::if_all(everything(), ~ .!=0)))$mutation
viber_input$vaf_df$mutation
(viber_input$trials %>% filter(dplyr::if_all(everything(), ~ .!=0))) %>% which
viber_input$trials %>% filter(dplyr::if_all(everything(), ~ .!=0)) %>% which
viber_input$trials %>% filter(dplyr::if_all(everything(), ~ .!=0))
viber_input$trials %>% filter(dplyr::if_all(everything(), ~ .!=0)) %>% rownames()
viber_input$trials %>% which(dplyr::if_all(everything(), ~ .!=0))
viber_input$trials %>% filter(dplyr::if_all(everything(), ~ .!=0))
viber_input$vaf_df
viber_input$vaf_df %>% filter(dplyr::if_all(starts_with("dp"), ~ .!=0))
(viber_input$vaf_df %>% filter(dplyr::if_all(starts_with("dp"), ~ .!=0)))$mutations
(viber_input$vaf_df %>% filter(dplyr::if_all(starts_with("dp"), ~ .!=0)))$mutation
x$keep_mut = (viber_input$vaf_df %>% filter(dplyr::if_all(starts_with("dp"), ~ .!=0)))$mutation
x$keep_mut
x$vaf_dataframe
saveRDS(x, "../LineaGT_data/murine/HOMO_LTR/HOMO_LTR.fit.Rds")
x
