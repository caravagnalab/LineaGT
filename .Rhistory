CC#DD
CC#DD"
patchwork::wrap_plots(p, muller, exp1, exp2, design=design)
plot_exp_fit
design = "AAABB
AAABB
AAACC
AAACC"
patchwork::wrap_plots(p, muller, exp1, design=design)
devtools::load_all()
plot_exp_fit(obj, highlight=c(cluster)) + theme(legend.position="none")
plot_exp_fit(obj, highlight=c(cluster), viber = T) + theme(legend.position="none")
devtools::load_all()
plot_exp_fit(obj, highlight=c(cluster), viber = T) + theme(legend.position="none")
devtools::load_all()
plot_exp_fit(obj, highlight=c(cluster), viber = T) + theme(legend.position="none")
devtools::load_all()
plot_exp_fit(obj, highlight=c(cluster), viber = T) + theme(legend.position="none")
devtools::load_all()
plot_exp_fit(obj, highlight=c(cluster), viber = T) + theme(legend.position="none")
obj = readRDS("../../internship_2021/mutation_dynamics/analysis/model/r_scripts/objects_viber.Rds")
obj
obj$vaf_dataframe
devtools::load_all()
devtools::document()
pkgdown::build_search()
pkgdown::build_site()
devtools::load_all()
pkgdown::build_site()
pkgdown::build_site()
devtools::document()
pkgdown::build_site()
min_ccf=0.07
dataframe = obj$vaf_dataframe %>% mutate(labels_mut=paste(labels,labels_viber,sep=".")) %>%
dplyr::select(starts_with("vaf"), mutation, IS, contains("labels"), contains("viber")) %>%
tidyr::pivot_longer(cols=starts_with("vaf"), names_to="timepoints_lineage", values_to="vaf") %>%
separate(timepoints_lineage, into=c("vv","timepoints","lineage")) %>%
mutate(timepoints=paste(vv,timepoints,sep="."),vv=NULL) %>%
tidyr::pivot_wider(names_from=timepoints, values_from="vaf")
dataframe
try(expr = {dataframe = dataframe %>% dplyr::select(-"vaf.over")}, silent=T)
try(expr = {dataframe = dataframe %>% dplyr::select(-"vaf.steady")}, silent=T)
highlight=c("C_11")
select_relevant_clusters
devtools::load_all()
get_viber_clusters(obj, c("C_11"))
select_relevant_clusters
highlight_palette
highlight
if (purrr::is_empty(highlight)) highlight = select_relevant_clusters(obj, min_ccf)
highlight
highlight_v = get_viber_clusters(obj, highlight)
highlight_v
Polychrome::swatch(obj$params)
Polychrome::swatch(obj$color_palette)
color_palette = highlight_palette(obj$color_palette, c(highlight, highlight_v))
color_palette
Polychrome::swatch(color_palette)
combinations = get_pairs(dataframe, columns=dataframe %>% dplyr::select(dplyr::starts_with("vaf")) %>% colnames)
theta = get_binomial_theta(obj) %>% tibble::rownames_to_column(var="labels_mut") %>%
tidyr::pivot_longer(cols=starts_with("vaf"), names_to="timepoints_lineage", values_to="vaf") %>%
tidyr::separate(timepoints_lineage, into=c("timepoints","lineage"), sep="_") %>%
tidyr::pivot_wider(names_from="timepoints", values_from="vaf") %>%
mutate(labels=labels_mut) %>% separate(labels, into=c("labels","else"), sep="[.]") %>%
mutate("else"=NULL)
theta
theta$labels_mut %>% unique() %>% sort
dataframe$labels_mut %>% unique() %>% sort
combinations
t1_t2 = "vaf.early:vaf.mid"
xy = strsplit(t1_t2, ":")[[1]]
df = dataframe %>% filter(labels %in% highlight)
df
tt = theta %>% filter(labels %in% highlight)
tt
color_palette[highlight_v]
Polychrome::swatch(color_palette[highlight_v])
plot_vaf_2D(df, tt, xy[1], xy[2], color_palette[highlight_v])
devtools::load_all()
plot_vaf_2D(df, tt, xy[1], xy[2], color_palette[highlight_v])
theta = get_binomial_theta(obj)
pop_df = get_muller_pop(obj, means=theta)
pop_df
edges_df = get_muller_edges(obj, labels=get_unique_viber_labels(obj))
edges_df
highlight
highlight=c()
select_relevant_clusters
highlight
if (!purrr::is_empty(highlight))
highlight
devtools::load_all()
highlight=c()
if (purrr::is_empty(highlight)) highlight = select_relevant_clusters(obj, min_ccf)
highlight
color_palette = highlight_palette(obj$color_palette, highlight)
color_palette
Polychrome::swatch(color_palette)
pop_df = get_muller_pop(obj)
edges_df = get_muller_edges(obj)
pop_df
edges_df
timepoints = obj$dimensions
lineages = obj$lineages
exp_limits = c(min(pop_df$lm_r), max(pop_df$lm_r))
ll="MNC"
tp = timepoints[grep(pattern=ll, x=timepoints)]
tp
pop_ll = pop_df %>% filter(Lineage==ll)
pop_ll
mullerdf_ll = ggmuller::get_Muller_df(edges_df, pop_ll)
mullerdf_ll
mullerplot_util(mullerdf_ll, y="Frequency", fill="Identity", lineage=ll,
color_palette=color_palette[highlight], legend.pos=legend.pos)
legend.pos="right"
mullerplot_util(mullerdf_ll, y="Frequency", fill="Identity", lineage=ll,
color_palette=color_palette[highlight], legend.pos=legend.pos)
color_palette[highlight]
highlight
select_relevant_clusters
devtools::load_all()
color_palette[highlight]
color_palette = highlight_palette(obj$color_palette, highlight)
color_palette
highlight = select_relevant_clusters(obj, min_ccf)
highlight
color_palette[highlight]
mullerplot_util(mullerdf_ll, y="Frequency", fill="Identity", lineage=ll,
color_palette=color_palette[highlight], legend.pos=legend.pos)
mullerplot_util(mullerdf_ll %>% ggmuller::add_empty_pop(), y="Population",
fill="Identity", color_palette=color_palette[highlight],
lineage=ll, legend.pos=legend.pos)
mullerplot_util(mullerdf_ll, y="Frequency", fill="lm_r",
color_palette=color_palette[highlight], lineage=ll,
legend.pos=legend.pos, exp_limits=exp_limits)
devtools::load_all()
plot_exp_fit(obj, highlight = c("C_11"))
devtools::load_all()
plot_exp_fit(obj, highlight = c("C_11"))
plot_exp_fit(obj, highlight = c("C_11"), viber=T)
plot_mullerplot(obj, highlight = c("C_11"), viber=T)
plot_vaf(obj, highlight = c("C_11"))
get_binomial_theta(obj)
get_binomial_theta(obj) %>% tibble::rownames_to_column(var="labels_mut") %>%
tidyr::pivot_longer(cols=starts_with("vaf"), names_to="timepoints_lineage", values_to="vaf") %>%
tidyr::separate(timepoints_lineage, into=c("timepoints","lineage"), sep="_") %>%
tidyr::pivot_wider(names_from="timepoints", values_from="vaf") %>%
mutate(labels=labels_mut) %>% separate(labels, into=c("labels","else"), sep="[.]") %>%
mutate("else"=NULL)
devtools::load_all()
devtools::load_all()
plot_exp_rate()
plot_exp_rate(obj)
plot_exp_rate(obj, viber=T)
devtools::load_all()
plot_exp_rate(obj, viber=T)
devtools::load_all()
plot_exp_rate(obj, viber=T)
devtools::load_all()
plot_exp_rate(obj, viber=T)
devtools::load_all()
plot_exp_rate(obj, viber=T)
devtools::load_all()
plot_exp_rate(obj, viber=T)
devtools::load_all()
plot_exp_rate(obj, viber=T)
devtools::load_all()
plot_exp_rate(obj, viber=T)
vaf_c11 = plot_vaf(obj, highlight=c("C_11"))
vaf_c11
vaf_c11 = plot_vaf(obj, highlight=c("C_11")) %>% patchwork::wrap_plots(guides="collect")
vaf_c11
plot_mullerplot(obj, highlight=c(cluster), wrap=T, legend.pos="none")
cluster="C_11"
plot_mullerplot(obj, highlight=c(cluster), wrap=T, legend.pos="none")
theta
get_binomial_theta()
get_binomial_theta(obj)
reshape_theta_long(obj)
reshape_theta_long(obj) %>% filter(labels=="C_11")
devtools::load_all()
plot_mullerplot(obj, highlight=c(cluster), wrap=T, legend.pos="none")
tt = reshape_theta_long(obj) %>% filter(labels=="C_11")
get_mean(obj)
means %>% as.data.frame() %>% tibble::rownames_to_column() %>% reshape2::melt() %>%
tidyr::separate(variable, into=c("else", "Generation", "Lineage"), sep="\\.|\\_") %>%
mutate("else"=NULL, Identity=rowname, rowname=NULL, Population=value, value=NULL) %>%
group_by(Generation, Lineage) %>% mutate(Frequency=Population/sum(Population)) %>% dplyr::ungroup()
get_mean(obj) %>% as.data.frame() %>% tibble::rownames_to_column() %>% reshape2::melt() %>%
tidyr::separate(variable, into=c("else", "Generation", "Lineage"), sep="\\.|\\_") %>%
mutate("else"=NULL, Identity=rowname, rowname=NULL, Population=value, value=NULL) %>%
group_by(Generation, Lineage) %>% mutate(Frequency=Population/sum(Population)) %>% dplyr::ungroup()
tt
get_mean(obj) %>% as.data.frame() %>% tibble::rownames_to_column() %>% reshape2::melt()
get_mean(obj) %>% as.data.frame() %>% tibble::rownames_to_column() %>% tidyr::pivot_longer(cols=starts_with("cov"), names_to="timepoints_lineage", values_to="cov")
mm = get_mean(obj) %>% as.data.frame() %>% tibble::rownames_to_column() %>% tidyr::pivot_longer(cols=starts_with("cov"), names_to="timepoints_lineage", values_to="cov")
mm
tt
mm = get_mean(obj) %>% as.data.frame() %>% tibble::rownames_to_column() %>% tidyr::pivot_longer(cols=starts_with("cov"), names_to="timepoints_lineage", values_to="cov") %>% filter(labels=="C_11")
get_mean(obj) %>% as.data.frame() %>% tibble::rownames_to_column() %>% tidyr::pivot_longer(cols=starts_with("cov"), names_to="timepoints_lineage", values_to="cov") %>% filter(labels=="C_11")
get_mean(obj) %>% as.data.frame() %>% tibble::rownames_to_column(var="labels") %>% tidyr::pivot_longer(cols=starts_with("cov"), names_to="timepoints_lineage", values_to="cov") %>% filter(labels=="C_11")
mm = get_mean(obj) %>% as.data.frame() %>% tibble::rownames_to_column(var="labels") %>% tidyr::pivot_longer(cols=starts_with("cov"), names_to="timepoints_lineage", values_to="cov") %>% filter(labels=="C_11")
mm
tt
tt = reshape_theta_long(obj) %>% filter(labels=="C_11") %>% tidyr::pivot_longer(cols=starts_with("vaf"), values_to="vaf", names_to="timepoint_lineage")
tt
tt = reshape_theta_long(obj) %>% filter(labels=="C_11") %>% tidyr::pivot_longer(cols=starts_with("vaf"), values_to="vaf", names_to="timepoints")
mm = get_mean(obj) %>% as.data.frame() %>% tibble::rownames_to_column(var="labels") %>% tidyr::pivot_longer(cols=starts_with("cov"), names_to="timepoints_lineage", values_to="cov") %>% separate(timepoints_lineage, into=c("else", "timepoints","lineage")) %>% filter(labels=="C_11")
mm
tt
mm = get_mean(obj) %>% as.data.frame() %>% tibble::rownames_to_column(var="labels") %>% tidyr::pivot_longer(cols=starts_with("cov"), names_to="timepoints_lineage", values_to="cov") %>% separate(timepoints_lineage, into=c("else", "timepoints","lineage")) %>% filter(labels=="C_11") %>% mutate("else"=NULL)
tt = reshape_theta_long(obj) %>% filter(labels=="C_11") %>% tidyr::pivot_longer(cols=starts_with("vaf"), values_to="vaf", names_to="timepoints") %>% separate(timepoints, into=c("else", "timepoints"), sep="[.]")
tt
tt = reshape_theta_long(obj) %>% filter(labels=="C_11") %>% tidyr::pivot_longer(cols=starts_with("vaf"), values_to="vaf", names_to="timepoints") %>% separate(timepoints, into=c("else", "timepoints"), sep="[.]") %>% mutate("else"=NULL)
tt
mm
tt %>% group_by(lineage, timepoints)
inner_join(tt, mm, on=c("labels", "timepoints", "lineage"))
jj = inner_join(tt, mm, on=c("labels", "timepoints", "lineage"))
get_muller_pop(obj)
get_muller_pop(obj) %>% filter(Identity=="C_11")
get_muller_pop(obj) %>% filter(Identity=="C_11") %>% mutate(labels=Identity, lineage=Lineage, timepoints=Generation)
get_muller_pop(obj) %>% filter(Identity=="C_11") %>% mutate(labels=Identity, lineage=Lineage, timepoints=Generation, Identity=NULL, Lineage=NULL,Generarion=NULL)
get_muller_pop(obj) %>% filter(Identity=="C_11") %>% mutate(labels=Identity, lineage=Lineage, timepoints=Generation, Identity=NULL, Lineage=NULL,Generation=NULL)
mm = get_muller_pop(obj) %>% filter(Identity=="C_11") %>% mutate(labels=Identity, lineage=Lineage, timepoints=Generation, Identity=NULL, Lineage=NULL,Generation=NULL)
tt
tt %>% mutate(timepoints=dplyr::case_when(grepl("early", timepoints) ~ "60",
grepl("mid", timepoints) ~ "140",
grepl("late", timepoints) ~ "280"))
tt = tt %>% mutate(timepoints=dplyr::case_when(grepl("early", timepoints) ~ "60",
grepl("mid", timepoints) ~ "140",
grepl("late", timepoints) ~ "280"))
inner_join(tt, mm, on=c("labels", "timepoints", "lineage"))
mm
tt
tt = tt %>% mutate(timepoints=dplyr::case_when(grepl("early", timepoints) ~ "60",
grepl("mid", timepoints) ~ "140",
grepl("late", timepoints) ~ "280")) %>% mutate(timepoints=as.integer(timepoint))
tt = tt %>% mutate(timepoints=dplyr::case_when(grepl("early", timepoints) ~ "60",
grepl("mid", timepoints) ~ "140",
grepl("late", timepoints) ~ "280")) %>% mutate(timepoints=as.integer(timepoints))
inner_join(tt, mm, on=c("labels", "timepoints", "lineage"))
tt
mm
tt = reshape_theta_long(obj) %>% filter(labels=="C_11") %>% tidyr::pivot_longer(cols=starts_with("vaf"), values_to="vaf", names_to="timepoints") %>% separate(timepoints, into=c("else", "timepoints"), sep="[.]") %>% mutate("else"=NULL)
tt = tt %>% mutate(timepoints=dplyr::case_when(grepl("early", timepoints) ~ "60",
grepl("mid", timepoints) ~ "140",
grepl("late", timepoints) ~ "280")) %>% mutate(timepoints=as.integer(timepoints))
tt
inner_join(tt, mm, on=c("labels", "timepoints", "lineage"))
jj = inner_join(tt, mm, on=c("labels", "timepoints", "lineage"))
jj %>% mutate(mut_prop = vaf/100*Frequency)
pop_df2 = jj %>% mutate(mut_prop = vaf/100*Frequency)
pop_df2 = jj %>% mutate(freq_means=Frequency, Frequency=vaf/100*freq_means)
pop_df2
pop_df2 = jj %>% mutate(freq_means=Frequency, Frequency=vaf/100*freq_means, Identity=labels_mut)
pop_df2
pop_df2 %>% mutate(Generation=timepoints) dplyr::select(Population,Frequency,Identity,Generation)
pop_df2 %>% mutate(Generation=timepoints) %>% dplyr::select(Population,Frequency,Identity,Generation)
pop_df2 = pop_df2 %>% mutate(Generation=timepoints) %>% dplyr::select(Population,Frequency,Identity,Generation)
pop_df2
pop_df = get_muller_pop(obj)
pop_df
pop_df = get_muller_pop(obj) %>% dplyr::select(Population,Frequency,Identity,Generation)
pop_df
rbind(pop_df)
rbind(pop_df, pop_df2)
rbind(pop_df, pop_df2)
pop_df
pop_df2
pop_df_fin = rbind(pop_df, pop_df2)
pop_df_fin
edges_df = get_muller_edges(obj)
pop_df = get_muller_pop(obj) %>% dplyr::select(Population,Frequency,Identity,Generation,Lineage)
pop_df2 = jj %>% mutate(freq_means=Frequency, Frequency=vaf/100*freq_means, Identity=labels_mut)
pop_df2
pop_df2 = pop_df2 %>% mutate(Generation=timepoints) %>% dplyr::select(Population,Frequency,Identity,Generation,Lineage)
pop_df2 = pop_df2 %>% mutate(Generation=timepoints, Lineage=lineage) %>% dplyr::select(Population,Frequency,Identity,Generation,Lineage)
pop_df2
pop_df_fin = rbind(pop_df, pop_df2)
pop_df_fin
ll
pop_ll = pop_df_fin %>% filter(Lineage=ll)
pop_ll = pop_df_fin %>% filter(Lineage==ll)
pop_ll
get_muller_edges(obj)
get_muller_edges(obj, labels=get_viber_clusters(obj,c("C_11")))
edges_df = rbind(edges_df, get_muller_edges(obj, labels=get_viber_clusters(obj,c("C_11"))))
edges_df
mullerdf_ll = ggmuller::get_Muller_df(edges_df, pop_ll)
mullerdf_ll
mullerplot_util(mullerdf_ll, y="Frequency", fill="Identity", lineage=ll,
color_palette=color_palette, legend.pos=legend.pos)
devtools::load_all()
highlight
highlight=c("C_11")
if (purrr::is_empty(highlight)) highlight = select_relevant_clusters(obj, min_ccf)
highlight_v = get_viber_clusters(obj, highlight)
color_palette = highlight_palette(obj$color_palette, c(highlight, highlight_v))
highlight
highlight_v
mullerplot_util(mullerdf_ll, y="Frequency", fill="Identity", lineage=ll,
color_palette=color_palette, legend.pos=legend.pos)
get_Muller_df
?get_Muller_df
jj = inner_join(tt, mm, on=c("labels", "timepoints", "lineage"))
jj
jj %>% mutate(mut_prop = vaf/100*Population)
jj = jj %>% mutate(mut_prop = vaf/100*Population)
jj %>% mutate(Generation=timepoints) %>% dplyr::select(Population,Frequency,Identity,Generation)
jj
jj %>% mutate(Lineage=lineage,Generation=timepoints,cl_freq=Frequency,Frequency=mut_prop)
jj %>% mutate(Lineage=lineage,Generation=timepoints,cl_freq=Frequency,Frequency=mut_prop,lineage=NULL,timepoints=NULL)
jj %>% mutate(Lineage=lineage,Generation=timepoints,cl_freq=Frequency,Frequency=mut_prop,lineage=NULL,timepoints=NULL,Identity=labels,labels=NULL)
pop_df2 = jj %>% mutate(Lineage=lineage,Generation=timepoints,cl_freq=Frequency,Frequency=mut_prop,lineage=NULL,timepoints=NULL,Identity=labels,labels=NULL)
pop_df2
rbind(pop_df, pop_df2)
pop_df
pop_df2 = jj %>% mutate(Lineage=lineage,Generation=timepoints,cl_freq=Population,Population=mut_prop,lineage=NULL,timepoints=NULL,Identity=labels,labels=NULL)
pop_df %>% dplyr::select(Population,Frequency,Identity,Generation,Lineage)
pop_df2 = pop_df2 %>% dplyr::select(Population,Frequency,Identity,Generation,Lineage)
pop_df2
rbind(pop_df, pop_df2)
pop_fin = rbind(pop_df, pop_df2)
pop_fin %>% filter(Lineage==ll)
pop_ll = pop_fin %>% filter(Lineage==ll)
mullerdf_ll = ggmuller::get_Muller_df(edges_df, pop_ll)
pop_ll
pop_ll %>% View
pop_df2
pop_df2 = jj %>% mutate(Lineage=lineage,Generation=timepoints,cl_freq=Population,Population=mut_prop,lineage=NULL,timepoints=NULL,Identity=labels_mut,labels_mut=NULL)
pop_df2 = pop_df2 %>% dplyr::select(Population,Frequency,Identity,Generation,Lineage)
pop_df2
pop_fin = rbind(pop_df, pop_df2)
pop_ll = pop_fin %>% filter(Lineage==ll)
mullerdf_ll = ggmuller::get_Muller_df(edges_df, pop_ll)
mullerdf_ll
mullerplot_util(mullerdf_ll, y="Frequency", fill="Identity", lineage=ll,
color_palette=color_palette, legend.pos=legend.pos)
plot_mullerplot(obj, highlight = c("C_11"))
clusters = select_relevant_clusters(obj, min_ccf=0.07)
design = "AAABB
AAABB
AAACC
AAACC"
df = obj$vaf_dataframe
cluster
plot_mullerplot(obj, highlight=c(cluster), wrap=T, legend.pos="none")
plot_vaf(obj, highlight=c(cluster)) %>% patchwork::wrap_plots(guides="collect")
plot_exp_fit(obj, highlight=c(cluster)) + theme(legend.position="none")
plot_exp_fit(obj, highlight=c(cluster), viber=T) + theme(legend.position="none")
get_muller_pop(obj, means=theta)
get_muller_pop(obj)
devtools::load_all()
devtools::load_all()
plot_exp_fit(obj, highlight=c(cluster)) + theme(legend.position="none")
plot_exp_fit(obj, highlight=c(cluster), viber=T) + theme(legend.position="none")
patchwork::wrap_plots(p, muller, exp1, exp2, design=design)
muller = plot_mullerplot(obj, highlight=c(cluster), wrap=T, legend.pos="none")
p = plot_vaf(obj, highlight=c(cluster)) %>% patchwork::wrap_plots(guides="collect")
exp1 = plot_exp_fit(obj, highlight=c(cluster)) + theme(legend.position="none")
exp2 = plot_exp_fit(obj, highlight=c(cluster), viber=T) + theme(legend.position="none")
patchwork::wrap_plots(p, muller, exp1, exp2, design=design)
design = "AAABB
AAABB
AAA##
CC#DD
CC#DD"
patchwork::wrap_plots(p, muller, exp1, exp2, design=design)
design = "AAABB
AAABB
AAABB
CCDD#
CCDD#"
patchwork::wrap_plots(p, muller, exp1, exp2, design=design)
design = "AAABB
AAABB
AAABB
#CCDD#
#CCDD#"
patchwork::wrap_plots(p, muller, exp1, exp2, design=design)
design = "AAABB
AAABB
AAABB
#CCDD
#CCDD"
patchwork::wrap_plots(p, muller, exp1, exp2, design=design)
exp2 = plot_exp_fit(obj, highlight=c(cluster), viber=T)
patchwork::wrap_plots(p, muller, exp1, exp2, design=design)
design = "AAABB
AAABB
AAABB
CC#DD
CC#DD"
patchwork::wrap_plots(p, muller, exp1, exp2, design=design)
design = "AAA##
AAACC
AAACC
BBBDD
BBBDD"
patchwork::wrap_plots(p, muller, exp1, exp2, design=design)
design = "AAA##
AAACC
AAACC
BB#DD
BB#DD"
patchwork::wrap_plots(p, muller, exp1, exp2, design=design)
design = "AAABB
AAABB
AAABB
CC#DD
CC#DD"
patchwork::wrap_plots(p, muller, exp1, exp2, design=design)
design = "AAABB
AAABB
AAABB
CCDD#
CCDD#"
patchwork::wrap_plots(p, muller, exp1, exp2, design=design)
design = "AAABB
AAABB
AAABB
CCD##
CCD##"
patchwork::wrap_plots(p, muller, exp1, exp2, design=design)
exp2 = plot_exp_fit(obj, highlight=c(cluster), viber=T) + theme(legend.position="none")
patchwork::wrap_plots(p, muller, exp1, exp2, design=design)
design = "AAABB
AAABB
AAABB
CC#DD
CC#DD"
patchwork::wrap_plots(p, muller, exp1, exp2, design=design)
design = "BBAAA
BBAAA
BBAAA
CC#DD
CC#DD"
patchwork::wrap_plots(p, muller, exp1, exp2, design=design)
design = "BBAAA
BBAAA
BBAAA
CCDD#
CCDD#"
patchwork::wrap_plots(p, muller, exp1, exp2, design=design)
ggsave("./plots/HOMO_PGK.viber_clusters.c11.pdf", height=10, width=12)
wrapped = patchwork::wrap_plots(p, muller, exp1, exp2, design=design)
print(wrapped + patchwork::plot_annotation(title="VAF of mutations in experiments HOMO PGK across all lineages",
subtitle="threshold kept of 7%"))
ggsave("./plots/HOMO_PGK.viber_clusters.c11.pdf", height=10, width=12)
plot_mullerplot(obj, min_ccf=0.07)
plot_mullerplot(obj, min_ccf=0.07, wrap=T)
ggsave("plots/homo_pgk.muller.ccf.pdf", height=8, width = 8)
ggsave("plots/homo_pgk.muller.ccf.pdf", height=6, width = 8)
plot_mullerplot(obj, min_ccf=0.07, wrap=T)+ patchwork::plot_annotation(title="VAF of mutations in experiments HOMO PGK across all lineages",
subtitle="threshold kept of 7%"))
plot_mullerplot(obj, min_ccf=0.07, wrap=T)+ patchwork::plot_annotation(title="VAF of mutations in experiments HOMO PGK across all lineages", subtitle="threshold kept of 7%"))
plot_mullerplot(obj, min_ccf=0.07, wrap=T) %>% patchwork::plot_annotation(title="VAF of mutations in experiments HOMO PGK across all lineages", subtitle="threshold kept of 7%"))
plot_mullerplot(obj, min_ccf=0.07, wrap=T) & patchwork::plot_annotation(title="VAF of mutations in experiments HOMO PGK across all lineages", subtitle="threshold kept of 7%"))
plot_mullerplot(obj, min_ccf=0.07, wrap=T) & patchwork::plot_annotation(title="VAF of mutations in experiments HOMO PGK across all lineages", subtitle="threshold kept of 7%")
ggsave("plots/homo_pgk.muller.ccf.pdf", height=6, width = 8)
plot_mullerplot(obj, min_ccf=0.07, wrap=T)
ggsave("plots/homo_pgk.muller.ccf.pdf", height=6, width = 8)
ggsave("plots/homo_pgk.muller.ccf.pdf", height=5, width = 8)
plot_mullerplot(obj, min_ccf=0.07, wrap=T, which="pop")
ggsave("plots/homo_pgk.muller.pop.pdf", height=5, width = 8)
plot_mullerplot(obj, min_ccf=0.07, wrap=T, which="fitness")
ggsave("plots/homo_pgk.muller.fitness.pdf", height=5, width = 6)
plot_scatter_density(obj, highlight = c("C_11"))
pl = plot_scatter_density(obj, highlight = c("C_11"))
pl$`cov_early_B:cov_early_MNC`
highlight_palette
obj$color_palette
highlight = c("C_11")
color_palette = highlight_palette(obj$color_palette, highlight)
color_palette
devtools::load_all()
pl = plot_scatter_density(obj, highlight = c("C_11"))
pl$`cov_early_B:cov_mid_B`
cluster="C_4"
muller = plot_mullerplot(obj, highlight=c(cluster), wrap=T, legend.pos="none")
p = plot_vaf(obj, highlight=c(cluster)) %>% patchwork::wrap_plots(guides="collect")
exp1 = plot_exp_fit(obj, highlight=c(cluster)) + theme(legend.position="none")
exp2 = plot_exp_fit(obj, highlight=c(cluster), viber=T) + theme(legend.position="none")
wrapped = patchwork::wrap_plots(p, muller, exp1, exp2, design=design)
wrapped
print(wrapped + patchwork::plot_annotation(title="VAF of mutations in experiments HOMO PGK across all lineages",
subtitle="threshold kept of 7%"))
ggsave("./plots/HOMO_PGK.viber_clusters.c4.pdf", height=10, width=12)
devtools::load_all()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
pkgdown::build_site()
pkgdown::build_site()
pl = plot_scatter_density(obj)
devtools::load_all()
pl = plot_scatter_density(obj)
pl$`cov_early_B:cov_early_Myeloid`
obj$color_palette
pl = plot_scatter_density(obj, highlight = c("C_11"))
obj$color_palette
pl$`cov_early_B:cov_early_Myeloid`
plot_mullerplot(obj)
plot_mullerplot(obj, wrap=T)
plot_mullerplot(obj, which="pop", wrap=T)
plot_mullerplot(obj, which="fitness", wrap=T)
plot_vaf(obj, highlight=c("C_11"))
devtools::load_all()
devtools::document()
?install.packages()
