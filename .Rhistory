}
dev.off()
pdf("./plots/HOMO_PGK.viber_clusters.multipage.pdf", height=6, width=12)
for (cluster in clusters) {
print(cluster)
if (df %>% filter(labels==cluster) %>% nrow > 0) {
muller = plot_mullerplot(obj, highlight=c(cluster), wrap=T, legend.pos="none")
p = plot_vaf(obj, highlight=c(cluster)) %>% patchwork::wrap_plots(guides="collect")
exp = plot_exp_fit(obj, highlight = c(cluster)) + theme(legend.position = "none")
wrapped = patchwork::wrap_plots(p, muller, exp, design=design)
print(wrapped + patchwork::plot_annotation(title="VAF of mutations in experiments HOMO PGK across all lineages",
subtitle="threshold kept of 7%"))
}
}
dev.off()
pdf("./plots/HOMO_PGK.viber_clusters.multipage2.pdf", height=10, width=12)
for (cluster in clusters) {
print(cluster)
if (df %>% filter(labels==cluster) %>% nrow > 0) {
muller = plot_mullerplot(obj, highlight=c(cluster), wrap=T, legend.pos="none")
p = plot_vaf(obj, highlight=c(cluster)) %>% patchwork::wrap_plots(guides="collect")
exp = plot_exp_fit(obj, highlight = c(cluster)) + theme(legend.position = "none")
wrapped = patchwork::wrap_plots(p, muller, exp, design=design)
print(wrapped + patchwork::plot_annotation(title="VAF of mutations in experiments HOMO PGK across all lineages",
subtitle="threshold kept of 7%"))
}
}
dev.off()
theta = lineaGT:::get_binomial_theta(obj2) %>% tidyr::pivot_wider(names_from="lineage", values_from=starts_with("vaf")) %>% dplyr::select(-labels) %>% column_to_rownames("labels_mut")
theta = get_binomial_theta(obj2) %>% tidyr::pivot_wider(names_from="lineage", values_from=starts_with("vaf")) %>% dplyr::select(-labels) %>% tidyr::column_to_rownames("labels_mut")
library(tidyr)
theta = get_binomial_theta(obj2) %>% tidyr::pivot_wider(names_from="lineage", values_from=starts_with("vaf")) %>% dplyr::select(-labels) %>% tidyr::column_to_rownames("labels_mut")
devtools::load_all()
devtools::document()
theta = get_binomial_theta(obj2) %>% tidyr::pivot_wider(names_from="lineage", values_from=starts_with("vaf")) %>% dplyr::select(-labels) %>% tidyr::column_to_rownames("labels_mut")
devtools::document()
devtools::document()
devtools::load_all()
devtools::load_all()
theta = get_binomial_theta(obj2) %>% tidyr::pivot_wider(names_from="lineage", values_from=starts_with("vaf")) %>% dplyr::select(-labels) %>% tidyr::column_to_rownames("labels_mut")
theta
get_binomial_theta(obj2) %>% tidyr::pivot_wider(names_from="lineage", values_from=starts_with("vaf")) %>% dplyr::select(-labels) %>% column_to_rownames("labels_mut")
get_binomial_theta(obj2) %>% tidyr::pivot_wider(names_from="lineage", values_from=starts_with("vaf")) %>% dplyr::select(-labels)
detach("package:tidyr", unload = TRUE)
devtools::document()
devtools::load_all()
devtools::document()
devtools::load_all()
devtools::document()
devtools::load_all()
devtools::document()
theta = get_binomial_theta(obj2) %>% tidyr::pivot_wider(names_from="lineage", values_from=starts_with("vaf")) %>% dplyr::select(-labels) %>% tidyr::column_to_rownames("labels_mut")
theta = get_binomial_theta(obj2) %>% tidyr::pivot_wider(names_from="lineage", values_from=starts_with("vaf")) %>% dplyr::select(-labels) %>% column_to_rownames("labels_mut")
theta = get_binomial_theta(obj2) %>% tidyr::pivot_wider(names_from="lineage", values_from=starts_with("vaf")) %>% dplyr::select(-labels) %>% tidyverse::column_to_rownames("labels_mut")
devtools::load_all()
devtools::document()
theta = get_binomial_theta(obj2) %>% tidyr::pivot_wider(names_from="lineage", values_from=starts_with("vaf")) %>% dplyr::select(-labels) %>% tidyverse::column_to_rownames("labels_mut")
theta = get_binomial_theta(obj2) %>% tidyr::pivot_wider(names_from="lineage", values_from=starts_with("vaf")) %>% dplyr::select(-labels) %>% column_to_rownames("labels_mut")
theta = get_binomial_theta(obj2) %>% tidyr::pivot_wider(names_from="lineage", values_from=starts_with("vaf")) %>% dplyr::select(-labels) %>% tibble::column_to_rownames("labels_mut")
theta
get_muller_pop(obj, means=theta)
devtools::load_all()
get_muller_pop(obj, means=theta)
devtools::load_all()
plot_exp_fit(obj2, viber=T)
plot_exp_fit(obj2, viber=F)
devtools::load_all()
devtools::load_all()
plot_exp_fit(obj2, viber=T)
plot_exp_fit(obj2, viber=F)
devtools::load_all()
plot_exp_fit(obj2, viber=F)
plot_exp_fit(obj2, viber=T)
devtools::load_all()
plot_exp_fit(obj2, viber=T)
obj2$vaf_dataframe %>% colnames()
get_muller_pop(obj, means=theta)
get_muller_pop(obj2, means=theta)
theta
theta %>% as.data.frame()
theta %>% as.data.frame() %>% tibble::rownames_to_column()
get_muller_pop(obj)
get_muller_pop(obj, theta)
devtools::load_all()
get_muller_pop(obj, theta)
theta %>% as.data.frame() %>% tibble::rownames_to_column() %>% reshape2::melt() %>%
tidyr::separate(variable, into=c("else", "Generation", "Lineage"), sep="_")
theta
theta %>% devtools::load_all()
devtools::load_all()
get_muller_pop(obj, theta)
devtools::load_all()
get_muller_pop(obj, theta)
theta %>% as.data.frame() %>% tibble::rownames_to_column() %>% reshape2::melt() %>%
tidyr::separate(variable, into=c("else", "Generation", "Lineage"), sep=[.])
theta %>% as.data.frame() %>% tibble::rownames_to_column() %>% reshape2::melt() %>%
tidyr::separate(variable, into=c("else", "Generation", "Lineage"), sep="\\.|\\_")
devtools::load_all()
get_muller_pop(obj, theta)
plot_exp_fit(obj2, viber=T)
devtools::load_all()
plot_exp_fit(obj2, viber=T)
obj$vaf_dataframe %>% filter(grepl(highlight, labels))
obj$vaf_dataframe %>% filter(grepl(list("C_10.C1","C_2.C2"), labels))
obj$vaf_dataframe
devtools::load_all()
plot_exp_fit(obj2, viber=T)
obj2$vaf_dataframe
obj2$vaf_dataframe$labels_viber
devtools::load_all()
obj2$vaf_dataframe$labels_viber
plot_exp_fit(obj2, viber=T)
devtools::load_all()
plot_exp_fit(obj2, viber=T)
plot_exp_fit(obj2, viber=T, highlight = c("C_11"))
devtools::load_all()
plot_exp_fit(obj2, viber=T, highlight = c("C_11"))
devtools::load_all()
plot_exp_fit(obj2, viber=T, facet=T)
devtools::load_all()
plot_exp_fit(obj2, viber=T, facet=T)
plot_exp_fit(obj2, viber=T)
devtools::load_all()
plot_exp_fit(obj2, viber=T, facet=T)
devtools::load_all()
plot_exp_fit(obj2, viber=T, facet=T)
plot_exp_fit(obj2, viber=T, facet=F, highlight = c("C_11"))
devtools::load_all()
plot_exp_fit(obj2, viber=T, facet=F, highlight = c("C_11"))
devtools::load_all()
plot_exp_fit(obj2, viber=T, facet=F, highlight = c("C_11"))
devtools::load_all()
plot_mullerplot(obj, viber=T)
devtools::load_all()
plot_mullerplot(obj, viber=T)
devtools::load_all()
plot_mullerplot(obj, viber=T)
theta = get_binomial_theta(obj) %>%
tidyr::pivot_wider(names_from="lineage", values_from=starts_with("vaf")) %>%
dplyr::select(-labels) %>% tibble::column_to_rownames("labels_mut")
pop_df = get_muller_pop(obj, means=theta)
pop_df
edges_df = get_muller_edges(obj, labels=pop_df$Identity %>% unique())
edges_df
get_muller_edges(obj, labels=pop_df$Identity %>% unique()) %>% duplicated()
get_muller_edges(obj, labels=pop_df$Identity %>% unique()) %>% drop()
edges_df = get_muller_edges(obj, labels=pop_df$Identity %>% unique()) %>% filter(Parent!=Identity)
edges_df
devtools::load_all()
plot_mullerplot(obj, viber=T)
plot_mullerplot(obj, viber=T, wrap=T)
theta
theta[theta>0.4]
theta[theta>0.4&&theta<0.6]
theta[theta>0.4 && theta<0.6]
plot_mullerplot(obj, viber=T, wrap=T, highlight = c("C_3"))
plot_mullerplot(obj, viber=T, wrap=T, highlight = c("C_3."))
devtools::load_all()
plot_mullerplot(obj, viber=T, wrap=T, highlight = c("C_3."))
plot_exp_fit(obj, highlight = c("C_11"))
plot_exp_fit(obj, highlight = c("C_11"), viber=T)
devtools::document()
pkgdown::build_site()
devtools::load_all()
devtools::document()
pkgdown::build_site()
obj.homo_pgk = readRDS("../../internship_2021/mutation_dynamics/obj.HOMO_PGK.Rds")
obj.homo_pgk$vaf_dataframe
obj.homo_pgk = readRDS("../../internship_2021/mutation_dynamics/analysis/model/r_scripts/objects_viber.Rds")
obj.homo_pgk$vaf_dataframe
devtools::load_all()
get_vaf_dataframe(obj.homo_pgk)
devtools::document()
?mixture_model()
devtools::document()
?mixture_model()
devtools::document()
?mixture_model()
devtools::load_all()
devtools::document()
devtools::document()
devtools::load_all()
?fit
devtools::load_all()
devtools::load_all()
devtools::document()
pkgdown::build_site()
devtools::load_all()
get_binomial_theta(obj)
obj = obj.homo_pgk
get_binomial_theta(obj)
theta = get_binomial_theta(obj)
obj$vaf_dataframe = obj$vaf_dataframe %>% mutate(labels_mut=paste(labels, labels_viber, sep="."))
obj$vaf_dataframe
obj$vaf_dataframe$labels_mut
obj$viber_run$C_6
devtools::load_all()
obj
obj$color_palette
devtools::load_all()
get_unique_viber_labels(obj)
devtools::load_all()
get_unique_viber_labels(obj)
get_unique_labels(obj)
get_colors(list_lab = get_unique_viber_labels(obj))
obj$color_palette = c(obj$color_palette, get_colors(list_lab=get_unique_viber_labels(obj)))
obj$color_palette
saveRDS(obj, "../../internship_2021/mutation_dynamics/analysis/model/r_scripts/objects_viber.Rds")
highlight_palette
devtools::load_all()
plot_mullerplot(obj, viber=T)
theta = get_binomial_theta(obj)
get_muller_pop(obj, means=theta)
get_muller_pop(obj, means=theta) %>% filter(Identity=="P")
get_muller_edges(obj, labels=get_unique_viber_labels(obj)
)
devtools::load_all()
devtools::load_all()
get_muller_edges(obj, labels=get_unique_viber_labels(obj)
plot_mullerplot(obj, viber=T)
obj$color_palette
devtools::load_all()
plot_mullerplot(obj, viber=T)
devtools::load_all()
plot_mullerplot(obj, viber=T)
devtools::load_all()
plot_mullerplot(obj, viber=T)
plot_mullerplot(obj, viber=T)
devtools::load_all()
plot_mullerplot(obj, viber=T)
devtools::load_all()
plot_mullerplot(obj, viber=T)
devtools::load_all()
plot_mullerplot(obj, viber=T)
devtools::load_all()
plot_mullerplot(obj, viber=T)
plot_mullerplot(obj, viber=F)
devtools::load_all()
plot_mullerplot(obj, viber=T)
plot_mullerplot(obj, viber=F)
pop_df = get_muller_pop(obj)
pop_df
pop_df$Identity
pop_df$Identity %>% unique()
obj$color_palette %>% unique()
obj$color_palette %>% names
pop_df$Identity %>% unique()
ll = "MNC"
pop_ll = pop_df %>% filter(Lineage==ll)
pop_ll
pop_ll$Identity
ggmuller::get_Muller_df(edges_df, pop_ll)
edges_df = get_muller_edges(obj)
edges_df
ggmuller::get_Muller_df(edges_df, pop_ll)
devtools::load_all()
plot_mullerplot(obj, viber=F)
warnings()
obj$color_palette
Polychrome::swatch(obj$color_palette)
devtools::load_all()
plot_mullerplot(obj, viber=F)
devtools::load_all()
plot_mullerplot(obj, viber=F)
devtools::load_all()
clusters = select_relevant_clusters(obj, min_ccf=0.07)
devtools::load_all()
clusters = select_relevant_clusters(obj, min_ccf=0.07)
design = "AAACC
AAACC
AAABB
AAABB"
df = obj$vaf_dataframe
df
design = "AAADD
AAADD
CC#BB
CC#BB"
df = obj$vaf_dataframe
cluster="C_9"
muller = plot_mullerplot(obj, highlight=c(cluster), wrap=T, legend.pos="none")
df %>% filter(labels==cluster)
clusters
cluster = "C_3"
muller = plot_mullerplot(obj, highlight=c(cluster), wrap=T, legend.pos="none")
devtools::load_all()
muller = plot_mullerplot(obj, highlight=c(cluster), wrap=T, legend.pos="none")
devtools::load_all()
muller = plot_mullerplot(obj, highlight=c(cluster), wrap=T, legend.pos="none")
muller
devtools::load_all()
muller = plot_mullerplot(obj, highlight=c(cluster), wrap=T, legend.pos="none")
muller
plot_vaf(obj, highlight=c(cluster)) %>% patchwork::wrap_plots(guides="collect")
plot_vaf(obj, highlight=c(cluster), facet=T) %>% patchwork::wrap_plots(guides="collect")
plot_vaf(obj, highlight=c(cluster)) %>% patchwork::wrap_plots(guides="collect")
devtools::load_all()
devtools::load_all()
plot_vaf(obj, highlight=c(cluster)) %>% patchwork::wrap_plots(guides="collect")
devtools::load_all()
plot_vaf(obj, highlight=c(cluster)) %>% patchwork::wrap_plots(guides="collect")
devtools::load_all()
plot_vaf(obj, highlight=c(cluster)) %>% patchwork::wrap_plots(guides="collect")
obj$vaf_dataframe %>% mutate(labels_mut=paste(labels,labels_viber,sep=".")) %>%
dplyr::select(starts_with("vaf"), mutation, IS, contains("labels"), contains("viber")) %>%
tidyr::pivot_longer(cols=starts_with("vaf"), names_to="timepoints_lineage", values_to="vaf") %>%
separate(timepoints_lineage, into=c("vv","timepoints","lineage")) %>%
mutate(timepoints=paste(vv,timepoints,sep="."),vv=NULL) %>%
tidyr::pivot_wider(names_from=timepoints, values_from="vaf")
select_relevant_clusters
devtools::load_all()
plot_vaf(obj, highlight=list(cluster))
plot_vaf(obj, highlight=c(cluster))
plot_vaf(obj, highlight=list(cluster))
devtools::load_all()
plot_vaf(obj, highlight=list(cluster))
plot_vaf(obj, highlight=c(cluster))
dataframe = obj$vaf_dataframe %>% mutate(labels_mut=paste(labels,labels_viber,sep=".")) %>%
dplyr::select(starts_with("vaf"), mutation, IS, contains("labels"), contains("viber")) %>%
tidyr::pivot_longer(cols=starts_with("vaf"), names_to="timepoints_lineage", values_to="vaf") %>%
separate(timepoints_lineage, into=c("vv","timepoints","lineage")) %>%
mutate(timepoints=paste(vv,timepoints,sep="."),vv=NULL) %>%
tidyr::pivot_wider(names_from=timepoints, values_from="vaf")
dataframe
try(expr = {dataframe = dataframe %>% dplyr::select(-"vaf.over")}, silent=T)
try(expr = {dataframe = dataframe %>% dplyr::select(-"vaf.steady")}, silent=T)
highlight
highlight = c()
highlight = c(cluster)
highlight
if (purrr::is_empty(highlight)) highlight = select_relevant_clusters(obj, min_ccf)
color_palette = highlight_palette(obj$color_palette, highlight)
color_palette
combinations = get_pairs(dataframe, columns=dataframe %>% dplyr::select(dplyr::starts_with("vaf")) %>% colnames)
theta = get_binomial_theta(obj)
df = dataframe %>% filter(labels %in% highlight)
df
theta = theta %>% filter(labels %in% highlight)
theta
theta[grepl(highlight, rownames(theta)),]
devtools::as.package()
devtools::load_all()
plot_vaf(obj, highlight=c(cluster))
dataframe %>% filter(labels %in% highlight)
devtools::load_all()
dataframe %>% filter(labels %in% highlight)
plot_vaf(obj, highlight=c(cluster))
devtools::load_all()
plot_vaf(obj, highlight=c(cluster))
theta
theta = get_binomial_theta(obj) %>% tibble::rownames_to_column(var="labels_mut")
get_binomial_theta(obj) %>% tibble::rownames_to_column(var="labels_mut") %>%
tidyr::pivot_longer(cols=starts_with("vaf"), names_to="timepoints_lineage", values_to="vaf")
get_binomial_theta(obj) %>% tibble::rownames_to_column(var="labels_mut") %>%
tidyr::pivot_longer(cols=starts_with("vaf"), names_to="timepoints_lineage", values_to="vaf") %>%
tidyr::separate(timepoints_lineage, into=c("timepoints","lineage"), sep="_") %>%
tidyr::pivot_wider(names_from="timepoint", values_from="vaf")
get_binomial_theta(obj) %>% tibble::rownames_to_column(var="labels_mut") %>%
tidyr::pivot_longer(cols=starts_with("vaf"), names_to="timepoints_lineage", values_to="vaf") %>%
tidyr::separate(timepoints_lineage, into=c("timepoints","lineage"), sep="_") %>%
tidyr::pivot_wider(names_from="timepoints", values_from="vaf")
devtools::load_all()
plot_vaf(obj, highlight=c(cluster))
devtools::load_all()
plot_vaf(obj, highlight=c(cluster))
get_binomial_theta(obj) %>% tibble::rownames_to_column(var="labels_mut") %>%
tidyr::pivot_longer(cols=starts_with("vaf"), names_to="timepoints_lineage", values_to="vaf") %>%
tidyr::separate(timepoints_lineage, into=c("timepoints","lineage"), sep="_") %>%
tidyr::pivot_wider(names_from="timepoints", values_from="vaf") %>%
mutate(labels=labels_mut) %>% separate(labels, into=c("labels","else"), sep="[.]") %>%
mutate("else"=NULL)
devtools::load_all()
plot_vaf(obj, highlight=c(cluster))
devtools::load_all()
plot_vaf(obj, highlight=c(cluster))
plot_vaf(obj, highlight=c(cluster)) %>% patchwork::wrap_plots(guides="collect")
devtools::load_all()
plot_vaf(obj, highlight=c(cluster)) %>% patchwork::wrap_plots(guides="collect")
highlight_palette(obj$color_palette, c("C_3"))
grepl(names(color_palette), c(highlight,paste(highlight,".",sep="")))
grepl(names(obj$color_palette), c(highlight,paste(highlight,".",sep="")))
grepl(names(obj$color_palette), paste(highlight,".",sep=""))
grepl(names(obj$color_palette), paste(highlight,".",sep=""))
highlight,".",sep="")
paste(highlight,".",sep="")
devtools::load_all()
plot_vaf(obj, highlight=c(cluster)) %>% patchwork::wrap_plots(guides="collect")
devtools::load_all()
plot_vaf(obj, highlight=c(cluster)) %>% patchwork::wrap_plots(guides="collect")
color_palette[!grepl(highlight, names(color_palette))] %>% names
paste(highlight, ".", sep="")
highlight = paste(highlight, ".", sep="")
color_palette[!grepl(highlight, names(color_palette))] %>% names
color_palette[grepl(highlight, names(color_palette))]
color_palette[grepl(highlight, names(color_palette), fixed=T)]
highlight = c(highlight, paste(highlight, ".", sep=""))
highlight
highlight=c("C_3")
highlight = c(highlight, paste(highlight, ".", sep=""))
highlight
color_palette[grepl(highlight, names(color_palette), fixed=T)]
devtools::load_all()
plot_vaf(obj, highlight=c(cluster)) %>% patchwork::wrap_plots(guides="collect")
plot_vaf(obj, highlight=c(cluster)) %>% patchwork::wrap_plots(guides="collect")
devtools::load_all()
plot_vaf(obj, highlight=c(cluster)) %>% patchwork::wrap_plots(guides="collect")
devtools::load_all()
plot_vaf(obj, highlight=c(cluster)) %>% patchwork::wrap_plots(guides="collect")
devtools::load_all()
plot_vaf(obj, highlight=c(cluster)) %>% patchwork::wrap_plots(guides="collect")
devtools::load_all()
plot_vaf(obj, highlight=c(cluster)) %>% patchwork::wrap_plots(guides="collect")
devtools::load_all()
plot_vaf(obj, highlight=c(cluster)) %>% patchwork::wrap_plots(guides="collect")
muller = plot_mullerplot(obj, highlight=c(cluster), wrap=T, legend.pos="none")
p = plot_vaf(obj, highlight=c(cluster)) %>% patchwork::wrap_plots(guides="collect")
exp1 = plot_exp_fit(obj, highlight=c(cluster)) + theme(legend.position="none")
exp2 = plot_exp_fit(obj, highlight=c(cluster), viber=T) + theme(legend.position="none")
wrapped = patchwork::wrap_plots(p, muller, exp, design=design)
wrapped = patchwork::wrap_plots(p, muller, exp1, exp2, design=design)
wrapped
design = "AAAADD
AAAADD
CCCBBB
CCCBBB"
patchwork::wrap_plots(p, muller, exp1, exp2, design=design)
devtools::load_all()
clusters = select_relevant_clusters(obj, min_ccf=0.07)
# design = "AAAADD
#           AAAADD
#           CCCBBB
#           CCCBBB"
# df = obj$vaf_dataframe
#
# pdf("./plots/HOMO_PGK.viber_clusters.multipage2.pdf", height=10, width=12)
# for (cluster in clusters) {
#   print(cluster)
#   if (df %>% filter(labels==cluster) %>% nrow > 0) {
#     muller = plot_mullerplot(obj, highlight=c(cluster), wrap=T, legend.pos="none")
#     p = plot_vaf(obj, highlight=c(cluster)) %>% patchwork::wrap_plots(guides="collect")
#     exp1 = plot_exp_fit(obj, highlight=c(cluster)) + theme(legend.position="none")
#     exp2 = plot_exp_fit(obj, highlight=c(cluster), viber=T) + theme(legend.position="none")
#     wrapped = patchwork::wrap_plots(p, muller, exp1, exp2, design=design)
#     print(wrapped + patchwork::plot_annotation(title="VAF of mutations in experiments HOMO PGK across all lineages",
#                                     subtitle="threshold kept of 7%"))
#   }
# }
# dev.off()
p = plot_vaf(obj, highlight=c(cluster)) %>% patchwork::wrap_plots(guides="collect")
patchwork::wrap_plots(p, muller, exp1, exp2, design=design)
clusters = select_relevant_clusters(obj, min_ccf=0.07)
# design = "AAAADD
#           AAAADD
#           CCCBBB
#           CCCBBB"
# df = obj$vaf_dataframe
#
# pdf("./plots/HOMO_PGK.viber_clusters.multipage2.pdf", height=10, width=12)
# for (cluster in clusters) {
#   print(cluster)
#   if (df %>% filter(labels==cluster) %>% nrow > 0) {
#     muller = plot_mullerplot(obj, highlight=c(cluster), wrap=T, legend.pos="none")
#     p = plot_vaf(obj, highlight=c(cluster)) %>% patchwork::wrap_plots(guides="collect")
#     exp1 = plot_exp_fit(obj, highlight=c(cluster)) + theme(legend.position="none")
#     exp2 = plot_exp_fit(obj, highlight=c(cluster), viber=T) + theme(legend.position="none")
#     wrapped = patchwork::wrap_plots(p, muller, exp1, exp2, design=design)
#     print(wrapped + patchwork::plot_annotation(title="VAF of mutations in experiments HOMO PGK across all lineages",
#                                     subtitle="threshold kept of 7%"))
#   }
# }
# dev.off()
devtools::load_all()
devtools::load_all()
p = plot_vaf(obj, highlight=c(cluster)) %>% patchwork::wrap_plots(guides="collect")
patchwork::wrap_plots(p, muller, exp1, exp2, design=design)
design = "AAAABB
AAAABB
CCCDDD
CCCDDD"
patchwork::wrap_plots(p, muller, exp1, exp2, design=design)
design = "AAA#BB
AAA#BB
CCC#DDD
CCC#DDD"
design = "AAA#BB
AAA#BB
CCC#DD
CCC#DD"
p = plot_vaf(obj, highlight=c(cluster)) %>% patchwork::wrap_plots(guides="collect")
patchwork::wrap_plots(p, muller, exp1, exp2, design=design)
design = "AAABB
AAABB
CC#DD
CC#DD"
patchwork::wrap_plots(p, muller, exp1, exp2, design=design)
plot_exp_fit
design = "AAABB
AAABB
AAACC
AAACC"
patchwork::wrap_plots(p, muller, exp1, design=design)
devtools::load_all()
plot_exp_fit(obj, highlight=c(cluster)) + theme(legend.position="none")
plot_exp_fit(obj, highlight=c(cluster), viber = T) + theme(legend.position="none")
devtools::load_all()
plot_exp_fit(obj, highlight=c(cluster), viber = T) + theme(legend.position="none")
devtools::load_all()
plot_exp_fit(obj, highlight=c(cluster), viber = T) + theme(legend.position="none")
devtools::load_all()
plot_exp_fit(obj, highlight=c(cluster), viber = T) + theme(legend.position="none")
devtools::load_all()
plot_exp_fit(obj, highlight=c(cluster), viber = T) + theme(legend.position="none")
